{"version":3,"sources":["components/SidebarHeader.js","components/UserLibraries.js","components/Sidebar.js","components/TopResult.js","components/AlbumResults.js","components/ArtistResults.js","components/TrackResults.js","components/SearchResults.js","components/SearchNoResults.js","components/Search.js","components/OptionsCard.js","components/Table.js","components/ShowAlbumHeader.js","components/ShowAlbum.js","components/Playlisthead.js","components/DeleteTrackCard.js","components/PlaylistBody.js","components/ShowPlaylist.js","components/Body.js","components/Main.js","components/Console.js","constants.js","App.js","serviceWorker.js","index.js"],"names":["SidebarHeader","react_default","a","createElement","Fragment","className","react_router_dom","to","onClick","this","props","clearSearchBar","Component","UserLibraries","_this","playlists","length","map","playlist","concat","playlist_name","viewPlaylist","onMouseOver","console","log","Sidebar","components_SidebarHeader","components_UserLibraries","TopResult","state","iconStyle","zIndex","imageStyle","filter","hovering","setState","style","_this2","centerAlign","textAlign","topResult","type","onMouseEnter","hoverPlay","onMouseLeave","updateShowInfo","artist_id","src","img","url","alt","name","width","height","viewBox","fill","d","album_id","artist","toUpperCase","AlbumResults","albums","splice","album","i","key","id","ArtistResults","artists","TrackResults","tracks","track","track_id","SearchResults","_this$props$searchRes","searchResults","components_TopResult","baseURL","components_AlbumResults","components_ArtistResults","components_TrackResults","SearchNoResults","Search","components_SearchResults","components_SearchNoResults","OptionsCard","addingToPlaylist","creatingPlaylist","playlistInput","handleChange","event","Object","defineProperty","target","value","handleSubmit","preventDefault","selected","images","fetch","method","body","JSON","stringify","seed_track","seed_album","showInfo","headers","Accept","Content-Type","then","createdPlaylist","json","newPlayList","playlistCopy","toConsumableArray","updatePlaylists","catch","err","handleHover","bool","newPlaylist","addToExistingPlaylist","playlistId","playlist_id","createdTrack","hideOptionsCard","autoComplete","onSubmit","autoFocus","onChange","placeholder","Table","displayOptionsCard","scope","colSpan","spotify_id","components_OptionsCard","duration","ShowAlbumHeader","_this$props$showInfo","release","total_tracks","ShowAlbum","components_ShowAlbumHeader","components_Table","Playlisthead","editingPlaylistName","changeNameInput","playlistName","deleteCardOpen","res","updatedPlaylists","renamePlaylist","editPlaylistName","deletePlaylist","newPlaylists","deleteOnePlaylist","dateString","Date","parse","created_at","toDateString","substring","DeleteTrackCard","color","PlaylistBody","components_DeleteTrackCard","ShowPlaylist","componentDidMount","currentPlaylist","componentDidUpdate","components_Playlisthead","components_PlaylistBody","Body","redirect","react_router","push","search","path","exact","render","routeProps","components_Search","assign","components_ShowAlbum","strict","components_ShowPlaylist","Main","_this$setState2","info","renamedPlaylist","components_Sidebar","components_Body","Console","App","components_Main","components_Console","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.001e7b66.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport {Link} from 'react-router-dom'\n\nclass SidebarHeader extends Component {\n  render() {\n    return(\n    <>\n      <div\n        className=\"sidebarOptions\"\n        >Home</div>\n      <div\n        className=\"sidebarOptions\"\n        >\n        <Link\n          to=\"/\"\n          onClick={this.props.clearSearchBar}\n          >\n          Browse\n        </Link>\n      </div>\n      <div\n        className=\"sidebarOptions\"\n        >Radio</div>\n    </>\n    )\n  }\n}\n\nexport default SidebarHeader\n","import React, { Component } from 'react';\nimport { HashRouter } from 'react-router-dom'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport {Link} from 'react-router-dom'\n\n\nclass UserLibraries extends Component {\n  render() {\n    return(\n      <>\n      <p className=\"libraryHeaderText resultType\">YOUR LIBRARY</p>\n      <p className=\"libraryLinks\">\n        Made For You\n      </p>\n      <p className=\"libraryLinks\">\n        Recently Played\n      </p>\n      <p className=\"libraryLinks\">\n        Liked Songs\n      </p>\n      <p className=\"libraryLinks\">\n        Albums\n      </p>\n      <p className=\"libraryLinks\">\n        Artists\n      </p>\n      <p className=\"libraryLinks\">\n        Podcasts\n      </p>\n\n      <p className=\"libraryHeaderText resultType playlistsHeader\">\n        PLAYLISTS\n      </p>\n      {\n        this.props.playlists.length\n        ?\n        this.props.playlists.map(playlist => (\n          <Link\n            to={`/playlist/${playlist.playlist_name}`}\n            className=\"myPlaylists\"\n            onClick={() => {\n              this.props.viewPlaylist(playlist)\n            }}\n            onMouseOver={() => {\n              console.log(playlist);\n            }}\n            >{playlist.playlist_name}</Link>\n        ))\n        : null\n      }\n      </>\n    )\n  }\n}\n\nexport default UserLibraries\n","import React, { Component } from 'react';\nimport SidebarHeader from './SidebarHeader'\nimport UserLibraries from './UserLibraries'\n\n\nclass Sidebar extends Component {\n  render() {\n    return(\n    <>\n    <div className=\"sidebarHeader\">\n    <SidebarHeader\n      clearSearchBar={this.props.clearSearchBar}\n     />\n     </div>\n     <div className=\"userLibraries\">\n    <UserLibraries\n      playlists={this.props.playlists}\n      viewPlaylist={this.props.viewPlaylist}\n     />\n     </div>\n     <div className=\"sidebarFooter\">\n      footer\n     </div>\n\n    </>\n\n\n\n    )\n  }\n}\n\nexport default Sidebar\n","import React, { Component } from 'react'\nimport {Link} from 'react-router-dom'\n\nclass TopResult extends Component {\n\n  state = {\n    iconStyle: {zIndex: \"-10\"},\n    imageStyle: {filter: \"brightness(100%)\"}\n  }\n\n  hoverPlay(hovering) {\n    hovering\n    ?\n    this.setState({\n      style: {zIndex: \"1\"},\n      imageStyle: {filter: \"brightness(50%)\"}\n    })\n    :\n    this.setState({\n      style: {zIndex: \"-10\"},\n      imageStyle: {filter: \"brightness(100%)\"}\n    })\n  }\n\n  render() {\n    const centerAlign = {textAlign: 'center'}\n    return(\n    <>\n      <div>\n      <h3>Top Result</h3>\n      {\n        this.props.topResult.type===\"artist\"\n        ?\n        <Link\n          to='/showartist'\n          className=\"topResultsContainer\"\n          onMouseEnter={() => {\n            this.hoverPlay(true)\n          }}\n          onMouseLeave={() => {\n            this.hoverPlay(false)\n          }}\n          onClick={() => {\n            this.props.updateShowInfo(this.props.topResult.artist_id, \"artist\")\n          }}\n          >\n          <img\n            src={this.props.topResult.img[0]\n            ?this.props.topResult.img[0].url\n            :'https://i.imgur.com/TEfaeVF.png'}\n            alt={this.props.topResult.name}\n            className=\"artistImage topResultImg link\"\n            style={this.state.imageStyle}\n          />\n          <svg\n            className=\"icon-play\"\n            style={this.state.style}\n            width=\"60px\"\n            height=\"60px\"\n            viewBox=\"-65 -50 200 200\">\n          <path fill=\"currentColor\" d=\"M81 44.6c5 3 5 7.8 0 10.8L9 98.7c-5 3-9 .7-9-5V6.3c0-5.7 4-8 9-5l72 43.3z\"></path></svg>\n        </Link>\n        :\n        <Link\n          to='/showalbum'\n          className=\"topResultsContainer\"\n          onMouseEnter={() => {\n            this.hoverPlay(true)\n          }}\n          onMouseLeave={() => {\n            this.hoverPlay(false)\n          }}\n          onClick={() => {\n            this.props.updateShowInfo(this.props.topResult.album_id, \"album\")\n          }}\n          >\n          <img\n            src={this.props.topResult.img[0].url}\n            alt={this.props.topResult.name}\n            className=\"link topResultImg\"\n            style={this.state.imageStyle}\n          />\n          <svg\n            className=\"icon-play\"\n            style={this.state.style}\n            width=\"60px\"\n            height=\"60px\"\n            viewBox=\"-65 -50 200 200\">\n          <path fill=\"currentColor\" d=\"M81 44.6c5 3 5 7.8 0 10.8L9 98.7c-5 3-9 .7-9-5V6.3c0-5.7 4-8 9-5l72 43.3z\"></path></svg>\n        </Link>\n      }\n\n      {\n        this.props.topResult.type===\"artist\"\n        ?\n        <Link\n          to='/showartist'\n          >\n        <h5\n          style={centerAlign}\n          className=\"resultTitle link\"\n          onClick={() => {\n            this.props.updateShowInfo(this.props.topResult.artist_id, \"artist\")\n          }}\n          >\n          {this.props.topResult.name}\n        </h5>\n      </Link>\n        :\n        <Link\n          to='/showalbum'\n          >\n        <h5\n          className=\"resultTitle link\"\n          onClick={() => {\n            this.props.updateShowInfo(this.props.topResult.album_id, \"album\")\n          }}\n          >\n          {this.props.topResult.name}\n        </h5>\n      </Link>\n      }\n      {\n        this.props.topResult.type!==\"artist\"\n        ?\n        <Link\n          to='/showalbum'\n          >\n        <h6\n          className=\"resultSubline link\"\n          onClick={() => {\n            this.props.updateShowInfo(this.props.topResult.artist_id)\n          }}\n          >\n          {this.props.topResult.artist}\n        </h6>\n        </Link>\n        : null\n      }\n\n      {\n        this.props.topResult.type===\"artist\"\n        ?\n        <h6\n          className=\"resultType\"\n          style={centerAlign}\n          >\n          {this.props.topResult.type.toUpperCase()}\n        </h6>\n        :\n        <h6 className=\"resultType\">\n          {this.props.topResult.type.toUpperCase()}\n        </h6>\n      }\n\n      </div>\n    </>\n    )\n  }\n}\n\nexport default TopResult\n","import React, { Component } from 'react'\nimport {Link} from 'react-router-dom'\n\nclass AlbumResults extends Component {\n  render() {\n    const {albums} = this.props\n    return(\n      <>\n      <div className=\"categoryResultsHeader\">\n        <h3>Albums</h3>\n        <span className=\"seeAll\">SEE ALL</span>\n      </div>\n        <hr />\n        <div className=\"categoryResultsBody\">\n        {\n          albums.splice(0,4).map((album, i) => (\n            // <Link\n            //   to='/show'\n            //   >\n            <Link\n              to=\"/showalbum\"\n              key={`${i} album`}\n              id={album.album_id}\n              className=\"categoryResultContainer\"\n              onClick={() => {\n                this.props.updateShowInfo(album.album_id, \"album\")\n              }}\n              >\n              <img\n                src={album.img[0].url}\n                alt={album.name}\n                className=\"categoryImage\"\n              />\n              <div className=\"resultsDescription\">\n                <h5 className=\"resultTitle\">\n                  {album.name}\n                </h5>\n                <h6 className=\"resultSubline\">\n                  {album.artist}\n                </h6>\n              </div>\n\n            </Link>\n          ))\n        }\n      </div>\n      </>\n    )\n  }\n}\n\nexport default AlbumResults\n","import React, { Component } from 'react'\nimport {Link} from 'react-router-dom'\n\nclass ArtistResults extends Component {\n  render() {\n    const {artists} = this.props\n    return(\n      <>\n      <div className=\"categoryResultsHeader\">\n        <h3>Artists</h3>\n        <span className=\"seeAll\">SEE ALL</span>\n      </div>\n        <hr />\n        <div className=\"categoryResultsBody\">\n        {\n          artists.splice(0,4).map((artist, i) => (\n            <div\n              key={`${i} artist`}\n              id={artist.artist_id}\n              className=\"categoryResultContainer\"\n              >\n              <img\n                src={artist.img[0]\n                ? artist.img[0].url\n                : 'https://i.imgur.com/TEfaeVF.png' }\n                alt={artist.name}\n                className=\"categoryImage artistImage\"\n\n              />\n              <div className=\"resultsDescription\">\n                <h5 className=\"resultArtist\">\n                  {artist.name}\n                </h5>\n              </div>\n\n            </div>\n          ))\n\n        }\n      </div>\n      </>\n    )\n  }\n}\n\nexport default ArtistResults\n","import React, { Component } from 'react'\nimport {Link} from 'react-router-dom'\n\nclass TrackResults extends Component {\n  render() {\n    const {tracks} = this.props\n    return(\n      <>\n      <div className=\"categoryResultsHeader\">\n        <h3>Songs</h3>\n        <span className=\"seeAll\">SEE ALL</span>\n      </div>\n        <hr />\n        <div className=\"categoryResultsBody\">\n        {\n          tracks.splice(0,4).map((track, i) => (\n            <div\n              key={`${i} track`}\n              id={track.track_id}\n              className=\"categoryResultContainer\"\n              >\n              <img\n                src={track.img[0].url}\n                alt={track.name}\n                className=\"categoryImage\"\n\n              />\n              <div className=\"resultsDescription\">\n                <h5 className=\"resultTitle\">\n                  {track.name}\n                </h5>\n                <h6 className=\"resultSubline\">\n                  {track.artist}\n                </h6>\n              </div>\n\n            </div>\n          ))\n\n        }\n      </div>\n      </>\n    )\n  }\n}\n\nexport default TrackResults\n","import React, { Component } from 'react'\nimport TopResult from './TopResult'\nimport AlbumResults from './AlbumResults'\nimport ArtistResults from './ArtistResults'\nimport TrackResults from './TrackResults'\n\nclass SearchResults extends Component {\n  render() {\n    const { topResult, albums, artists, tracks } = this.props.searchResults\n    return(\n      <>\n      <div className=\"topResult\">\n        <TopResult\n          topResult={topResult[0]}\n          updateShowInfo={this.props.updateShowInfo}\n          baseURL={this.props.baseURL}\n        />\n      </div>\n      {\n        albums\n        ? <div className=\"categoryResults\">\n          <AlbumResults\n            albums={albums}\n            updateShowInfo={this.props.updateShowInfo}\n            baseURL={this.props.baseURL}\n           />\n         </div>\n        : null\n      }\n      {\n        artists.length\n      ? <div className=\"categoryResults\">\n        <ArtistResults\n          artists={artists}\n          updateShowInfo={this.props.updateShowInfo}\n          baseURL={this.props.baseURL}\n        />\n      </div>\n      : null\n      }\n      {\n        tracks\n      ? <div className=\"categoryResults\">\n          <TrackResults\n            tracks={tracks}\n            updateShowInfo={this.props.updateShowInfo}\n            baseURL={this.props.baseURL}\n           />\n        </div>\n      : null\n      }\n\n    </>\n    )\n  }\n}\n\nexport default SearchResults\n","import React, { Component } from 'react'\n\nclass SearchNoResults extends Component {\n  render() {\n    return(\n      <>\n      <svg\n      className=\"searchGlassSvg\"\n      viewBox=\"0 0 512 512\" width=\"65\"\n      height=\"65\">\n        <path className=\"searchGlass\" d=\"M349.714 347.937l93.714 109.969-16.254 13.969-93.969-109.969q-48.508 36.825-109.207 36.825-36.826 0-70.476-14.349t-57.905-38.603-38.603-57.905-14.349-70.476 14.349-70.476 38.603-57.905 57.905-38.603 70.476-14.349 70.476 14.349 57.905 38.603 38.603 57.905 14.349 70.476q0 37.841-14.73 71.619t-40.889 58.921zM224 377.397q43.428 0 80.254-21.461t58.286-58.286 21.461-80.254-21.461-80.254-58.286-58.285-80.254-21.46-80.254 21.46-58.285 58.285-21.46 80.254 21.46 80.254 58.285 58.286 80.254 21.461z\" fill=\"currentColor\" ></path>\n      </svg>\n      <div className=\"noResultsDescription\">\n      <h1 className=\"searchspotify\">Search Spotify</h1>\n      <p>\n      Find your favorite songs, artists, albums, podcast & videos, playlists and friends.\n      </p>\n      </div>\n      </>\n    )\n  }\n}\n\nexport default SearchNoResults\n","import React, { Component } from 'react'\nimport SearchResults from './SearchResults'\nimport SearchNoResults from './SearchNoResults'\n\nclass Search extends Component {\n\n\n  render() {\n    return(\n\n    <>\n    <div className=\"searchpage\">\n\n\n    {\n      this.props.searchResults\n      ?\n      <div className=\"searchResultsComponent\">\n        <SearchResults\n          searchResults={this.props.searchResults}\n          updateShowInfo={this.props.updateShowInfo}\n          baseURL = {this.props.baseURL}\n        />\n      </div>\n      :\n      <div className=\"searchNoResultsComponent\">\n        <SearchNoResults />\n      </div>\n    }\n\n\n\n  </div>\n  </>\n    )\n  }\n}\n\nexport default Search\n","import React, { Component } from 'react'\n\nclass OptionsCard extends Component {\n  state = {\n    addingToPlaylist: '',\n    // playlists: '',\n    creatingPlaylist: false,\n    playlistInput: ''\n  }\n\n  // componentDidMount = () => {\n  //   fetch(`${this.props.baseURL}/playlists`)\n  //   .then(res => res.json())\n  //   .then(playlists => this.setState({\n  //     playlists: playlists\n  //   }))\n  //   .catch(err => console.log(err))\n  // }\n\n  handleChange = (event) => {\n    this.setState({\n      [event.target.id]: event.target.value\n    })\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault()\n\n    this.props.selected.images = this.props.selected.images[0].url\n\n\n    if (this.state.playlistInput) {\n    fetch(this.props.baseURL + '/playlists', {\n      method: 'POST',\n      body: JSON.stringify(\n        {playlist:\n          {\n            playlist_name: this.state.playlistInput,\n            seed_track: this.props.selected,\n            seed_album: this.props.showInfo\n          }\n      }),\n      headers: {\n        'Accept': 'application/json, text/plain, */*',\n        'Content-Type': 'application/json'\n        }\n      })\n    .then(createdPlaylist => createdPlaylist.json())\n    .then(newPlayList => {\n      let playlistCopy = [...this.props.playlists, newPlayList]\n      this.setState({\n        playlistInput: '',\n        // playlists: playlistCopy,\n        creatingPlaylist: false,\n      })\n      this.props.updatePlaylists(playlistCopy)\n    })\n    .catch(err=>console.log(err))\n    }\n  }\n\n\n  handleHover = (bool) => {\n    this.setState({\n      addingToPlaylist: bool\n    })\n  }\n\n  newPlaylist = () => {\n\n    this.setState({\n      creatingPlaylist: !this.state.creatingPlaylist\n    })\n  }\n\n  addToExistingPlaylist = (playlistId) => {\n    this.props.selected.playlist_id = playlistId\n\n    this.props.selected.images = this.props.selected.images[0].url\n\n    fetch(this.props.baseURL + '/playlists/' + playlistId + '/tracks', {\n      method: 'POST',\n      body: JSON.stringify(\n        {track: this.props.selected\n      }),\n      headers: {\n        'Accept': 'application/json, text/plain, */*',\n        'Content-Type': 'application/json'\n        }\n      })\n    .then(createdTrack => console.log(createdTrack))\n    .catch(err=>console.log(err))\n\n\n    this.props.hideOptionsCard(this.props.selected.name)\n\n\n  }\n\n  render(){\n    return(\n        <div\n          className=\"optionsCard\"\n          onMouseLeave={() => {\n            this.props.hideOptionsCard(this.props.selected.name)\n          }}\n          >\n        <div>\n          <p>\n            Add to Queue\n          </p>\n        </div>\n        <div>\n          <p>\n          Go to Song Radio\n          </p>\n        </div>\n        <div>\n          <p>\n            Go to Artist\n          </p>\n        </div>\n        <div>\n          <p>\n            Show Credits\n          </p>\n        </div>\n        <div>\n          <p>\n          Save to your Liked Songs\n          </p>\n        </div>\n        <div>\n          <p\n            onMouseEnter={() => {\n              this.handleHover(true)\n            }}\n            onMouseLeave={() => {\n              this.handleHover(false)\n            }}\n            >\n            <div className=\"carrot\">&#60;</div>Add to Playlist\n            {\n              this.state.addingToPlaylist\n              ? <div\n                  className=\"createPlaylistCard\"\n                  >\n                    {this.state.creatingPlaylist?\n                      <div\n                        onClick={() => {\n                          this.newPlaylist()\n                        }}\n                        >\n                        <form\n                          autoComplete=\"off\"\n                          onSubmit={this.handleSubmit}\n                          className=\"searchForm\"\n                          >\n                          <input\n                            autoFocus\n                            id=\"playlistInput\"\n                            type=\"text\"\n                            value={this.state.playlistInput}\n                            onChange={this.handleChange}\n                            placeholder=\"My Playlist #5\"\n\n                          />\n                        </form>\n                      </div>\n                      :\n                      <div\n                      onClick={() => {\n                        this.newPlaylist()\n                      }}>\n                      New Playlist\n                    </div>}\n                    {\n                      this.props.playlists.length\n                      ?\n                      <>\n                      {this.props.playlists.map(playlist => (\n                        <div\n                          onClick={() => {\n                            this.addToExistingPlaylist(playlist.id)\n                          }}\n                          >{playlist.playlist_name}</div>\n                      ))}\n                  </>\n                    : null\n                  }\n\n                </div>\n              : null\n            }\n          </p>\n\n        </div>\n        <div>\n          <p>\n            Share\n          </p>\n\n        </div>\n        </div>\n    )\n  }\n}\n\nexport default OptionsCard\n","import React, { Component } from 'react';\nimport OptionsCard from './OptionsCard'\n\nclass Table extends Component {\n\n  state = {\n\n  }\n\n  handleHover = (id, bool) => {\n    this.setState({\n      [id]: bool\n    })\n  }\n\n  displayOptionsCard = (id) => {\n    this.state[id]\n    ?\n    this.setState({\n      [id]: ''\n    })\n    :\n    this.setState({\n      [id]: 'clicked'\n    })\n  }\n\n  hideOptionsCard = (id) => {\n    this.setState({\n      [id]: ''\n    })\n  }\n\n\n\n  render() {\n    return(\n      <>\n      <table className=\"table table-hover table-dark\">\n        <thead className=\"sticky-top\">\n          <tr>\n            <th\n            style={{width: \"50px\"}}\n            scope=\"col\">#</th>\n            <th\n            style={{width: \"50px\"}}\n            scope=\"col\"> </th>\n            <th scope=\"col\" colSpan=\"10\"\n            className=\"tableTextLeft\"\n            style={{textAlign: \"left\"}}>TITLE</th>\n            <th\n              className=\"tableTextRight\"\n              scope=\"col\">TIME</th>\n\n          </tr>\n        </thead>\n\n        <tbody>\n\n          {\n            this.props.showInfo ?\n            this.props.showInfo.tracks.map((track, i) => (\n              <>\n              <tr\n                onMouseEnter={() => {\n                  this.handleHover(track.spotify_id, true)\n                }}\n                onMouseLeave={() => {\n                  this.handleHover(track.spotify_id, false)\n                }}\n              >\n                <th\n                 scope=\"row\">{i+1}</th>\n                <th>&hearts;</th>\n                <td colSpan=\"10\">{track.name}</td>\n                <td\n                style={{textAlign:\"right\"}}\n                >\n                { this.state[track.spotify_id] ? <div\n                    className=\"trackOptionsIcon\"\n                    onClick={() => {\n                      this.displayOptionsCard(track.name)\n                    }}\n                  >&#183;&#183;&#183;</div>\n                : null\n                }\n\n                {\n                  this.state[track.name]==\"clicked\"\n                  ?\n\n                  <OptionsCard\n                    showInfo={this.props.showInfo}\n                    selected={track}\n                    baseURL={this.props.baseURL}\n                    playlists={this.props.playlists}\n                    updatePlaylists={this.props.updatePlaylists}\n                    hideOptionsCard={this.hideOptionsCard}\n                  />\n\n                  : null\n                }\n\n                {track.duration}\n                </td>\n              </tr>\n            </>\n            ))\n            : null\n          }\n\n\n        </tbody>\n      </table>\n    </>\n    )\n  }\n}\n\nexport default Table\n","import React, { Component } from 'react'\nimport Table from './Table'\n\nclass ShowAlbumHeader extends Component {\n  render() {\n    const { id, name, artist, images, release, total_tracks, tracks, type} = this.props.showInfo\n    return(\n      <div className=\"albumHeaderContainer\">\n      <div className=\"headerMainInfo\">\n      <img\n        className=\"topResultImg\"\n        src={images[0].url}\n        alt={name}\n       />\n       <div className=\"albumHeaderInfo\">\n         <p>{type.toUpperCase()}</p>\n         <h1>\n           {name}\n         </h1>\n         <h4>\n           By <span>{artist}</span>\n         </h4>\n         <h4>\n           {release} &#183; {total_tracks} songs\n         </h4>\n       </div>\n     </div>\n     <div className=\"headerOptions\">\n      <button className=\"btn btn-success\"><div>PLAY</div></button>\n    </div>\n   </div>\n\n\n    )\n  }\n}\n\nexport default ShowAlbumHeader\n","import React, { Component } from 'react'\nimport ShowAlbumHeader from './ShowAlbumHeader'\nimport Table from './Table'\n\n\nclass ShowAlbum extends Component {\n  render() {\n    return(\n      <>\n\n      <div className=\"showpage\">\n      {\n        this.props.showInfo\n        ?\n        <>\n        <div className=\"showTableHeader\">\n          <ShowAlbumHeader\n            showInfo={this.props.showInfo}\n           />\n        </div>\n        <Table\n          showInfo={this.props.showInfo}\n          baseURL={this.props.baseURL}\n          playlists={this.props.playlists}\n          updatePlaylists={this.props.updatePlaylists}\n        />\n      </>\n\n\n\n\n\n         :\n         null\n      }\n      </div>\n      </>\n    )\n  }\n}\n\nexport default ShowAlbum\n","import React, { Component } from 'react'\nimport {Link} from 'react-router-dom'\n\n\nclass Playlisthead extends Component {\n  state = {\n    editingPlaylistName: false,\n    changeNameInput: '',\n    playlistName: '',\n    deleteCardOpen: false,\n  }\n\n  handleChange = (event) => {\n    this.setState({\n      [event.target.id]: event.target.value\n    })\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault()\n\n    if (this.state.changeNameInput) {\n      this.setState({\n        editingPlaylistName: false,\n        changeNameInput: '',\n      })\n\n      fetch(this.props.baseURL + '/playlists/'+ this.props.playlist.id, {\n        method: 'PUT',\n        body: JSON.stringify(\n          {playlist: {playlist_name: this.state.changeNameInput}}),\n        headers: {\n          'Accept': 'application/json, text/plain, */*',\n          'Content-Type': 'application/json'\n          }\n        })\n        .then(res => res.json())\n        .then(updatedPlaylists => this.props.renamePlaylist(updatedPlaylists, updatedPlaylists[updatedPlaylists.length-1]))\n        .catch(err=>console.log(err))\n    }\n  }\n\n  editPlaylistName = (bool) => {\n    this.setState({\n      editingPlaylistName: bool,\n    })\n  }\n\n  deletePlaylist = () => {\n    fetch(this.props.baseURL + '/playlists/'+ this.props.playlist.id, {\n      method: 'DELETE',\n      headers: {\n        'Accept': 'application/json, text/plain, */*',\n        'Content-Type': 'application/json'\n        }\n      })\n      .then(res=>res.json())\n      .then(newPlaylists=>this.props.deleteOnePlaylist(newPlaylists))\n      .catch(err=>console.log(err))\n  }\n\n\n\n  render() {\n    let dateString = new Date(Date.parse(this.props.playlist.created_at)).toDateString().substring(4,100)\n    return(\n      <div className=\"playlistHeaderContainer\">\n      <div className=\"headerMainInfo\">\n      <img\n        className=\"topResultImg\"\n        src={this.props.playlist.tracks[0].images}\n        alt={this.props.playlist.tracks[0].name}\n       />\n       <div className=\"albumHeaderInfo\">\n         <p>PLAYLIST</p>\n         {\n           this.state.editingPlaylistName\n           ?\n           <form\n             autoComplete=\"off\"\n             onSubmit={this.handleSubmit}\n             className=\"editPlaylistForm\"\n             onClick={() => {\n               this.editPlaylistName(false)\n             }}\n             >\n             <input\n               autoFocus\n               id=\"changeNameInput\"\n               type=\"text\"\n               value={this.state.changeNameInput}\n               onChange={this.handleChange}\n               placeholder=\"Change playlist name?\"\n             />\n           </form>\n           :\n           <h1\n             onClick={() => {\n               this.editPlaylistName(true)\n             }}\n             >\n             {this.props.playlist.playlist_name}\n           </h1>\n         }\n         <h4>\n           Created by <span>Victor</span>\n         </h4>\n         <h4>\n           {dateString} &#183; {this.props.playlist.tracks.length} songs\n         </h4>\n       </div>\n     </div>\n     <div className=\"headerOptions\">\n      <button className=\"btn btn-success\"><div>PLAY</div></button>\n      <div\n        className=\"deletePlaylistIcon\"\n        onClick={() => {\n          this.setState({\n            deleteCardOpen: !this.state.deleteCardOpen\n          })\n        }}\n        >\n          &#183;&#183;&#183;\n        </div>\n        {\n          this.state.deleteCardOpen\n          ?\n          <Link to=\"/\">\n          <div\n              className=\"playlistOptionsCard\"\n              onMouseLeave={() => {\n                this.setState({\n                  deleteCardOpen: false\n                })\n              }}\n              onClick={() => {\n                this.deletePlaylist()\n              }}\n            > <p>Delete playlist</p>\n          </div>\n        </Link>\n          : null\n        }\n\n    </div>\n   </div>\n\n    )\n  }\n}\n\nexport default Playlisthead\n","import React, { Component } from 'react'\n\nclass DeleteTrackCard extends Component {\n  render() {\n    return(\n      <div\n        className=\"optionsCard\"\n        onMouseLeave={() => {\n          this.props.hideOptionsCard(this.props.selected.name)\n        }}\n        >\n      <div>\n        <p>\n          Add to Queue\n        </p>\n      </div>\n      <div>\n        <p>\n        Go to Song Radio\n        </p>\n      </div>\n      <div>\n        <p>\n          Go to Artist\n        </p>\n      </div>\n      <div>\n        <p>\n          Show Credits\n        </p>\n      </div>\n      <div>\n        <p>\n        Save to your Liked Songs\n        </p>\n      </div>\n      <div>\n        <p>\n          Share\n        </p>\n\n      </div>\n      <div>\n        <p style={{color: \"rgba(160, 0, 0, 1)\"}}>\n          Delete\n        </p>\n\n      </div>\n      </div>\n    )\n  }\n}\n\nexport default DeleteTrackCard\n","import React, { Component } from 'react'\nimport DeleteTrackCard from './DeleteTrackCard'\n\nclass PlaylistBody extends Component {\n\n  state = {\n\n  }\n\n  handleHover = (id, bool) => {\n    this.setState({\n      [id]: bool\n    })\n  }\n\n  displayOptionsCard = (id) => {\n    this.state[id]\n    ?\n    this.setState({\n      [id]: ''\n    })\n    :\n    this.setState({\n      [id]: 'clicked'\n    })\n  }\n\n  hideOptionsCard = (id) => {\n    this.setState({\n      [id]: ''\n    })\n  }\n\n\n\n  render() {\n    return(\n      <>\n      <table className=\"table table-hover table-dark\">\n        <thead className=\"sticky-top\">\n          <tr>\n            <th\n            style={{width: \"50px\"}}\n            scope=\"col\">#</th>\n            <th\n            style={{width: \"50px\"}}\n            scope=\"col\"> </th>\n            <th scope=\"col\" colSpan=\"10\"\n            className=\"tableTextLeft\"\n            style={{textAlign: \"left\"}}>TITLE</th>\n            <th\n              className=\"tableTextRight\"\n              scope=\"col\">TIME</th>\n\n          </tr>\n        </thead>\n\n        <tbody>\n\n          {\n            this.props.playlist ?\n            this.props.playlist.tracks.map((track, i) => (\n              <>\n              <tr\n                onMouseEnter={() => {\n                  this.handleHover(track.spotify_id, true)\n                }}\n                onMouseLeave={() => {\n                  this.handleHover(track.spotify_id, false)\n                }}\n              >\n                <th\n                 scope=\"row\">{i+1}</th>\n                <th>&hearts;</th>\n                <td colSpan=\"10\">{track.name}</td>\n                <td\n                style={{textAlign:\"right\"}}\n                >\n                { this.state[track.spotify_id] ? <div\n                    className=\"trackOptionsIcon\"\n                    onClick={() => {\n                      this.displayOptionsCard(track.name)\n                    }}\n                  >&#183;&#183;&#183;</div>\n                : null\n                }\n\n                {\n                  this.state[track.name]==\"clicked\"\n                  ?\n                  <div className=\"optionsCardContainer\">\n                    <DeleteTrackCard\n                      showInfo={this.props.showInfo}\n                      selected={track}\n                      baseURL={this.props.baseURL}\n                      playlists={this.props.playlists}\n                      updatePlaylists={this.props.updatePlaylists}\n                      hideOptionsCard={this.hideOptionsCard}\n                    />\n                  </div>\n                  : null\n                }\n\n                {track.duration}\n                </td>\n              </tr>\n            </>\n            ))\n            : null\n          }\n\n\n        </tbody>\n      </table>\n    </>\n    )\n  }\n}\n\nexport default PlaylistBody\n","import React, { Component } from 'react'\nimport Playlisthead from './Playlisthead'\nimport PlaylistBody from './PlaylistBody'\n\nclass ShowPlaylist extends Component {\n  state = {\n    playlist: ''\n  }\n\n  componentDidMount = () => {\n    console.log('updating showplaylist')\n\n    fetch(this.props.baseURL + `/playlists/${this.props.currentPlaylist.id}`)\n    .then(res => res.json())\n    .then(playlist => this.setState({\n      playlist: playlist\n    }))\n    .catch(err => console.log(err))\n  }\n\n  componentDidUpdate = () => {\n    if (this.props.currentPlaylist.playlist_name != this.state.playlist.playlist_name) {\n      console.log('updating showplaylist')\n\n      fetch(this.props.baseURL + `/playlists/${this.props.currentPlaylist.id}`)\n      .then(res => res.json())\n      .then(playlist => this.setState({\n        playlist: playlist\n      }))\n      .catch(err => console.log(err))\n    }\n  }\n\n  render() {\n    return(\n      <>\n      {\n        this.state.playlist\n        ?\n      <>\n        <Playlisthead\n        playlist={this.state.playlist}\n        baseURL={this.props.baseURL}\n        renamePlaylist={this.props.renamePlaylist}\n        deleteOnePlaylist={this.props.deleteOnePlaylist}\n        />\n        <PlaylistBody\n          playlist={this.state.playlist}\n          baseURL={this.props.baseURL}\n        />\n      </>\n        :\n        null\n      }\n      </>\n    )\n  }\n}\n\nexport default ShowPlaylist\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport { Redirect } from 'react-router';\n\n\nimport Search from './Search'\nimport ShowAlbum from './ShowAlbum'\nimport ShowPlaylist from './ShowPlaylist'\n\nclass Body extends Component {\n  render() {\n    return(\n      <>\n      {\n        this.props.redirect\n        ?\n        <Redirect push to=\"/\" />\n        :\n        null\n\n      }\n      <div className=\"searchbar\">\n\n        <form\n          autoComplete=\"off\"\n          onSubmit={this.props.handleSubmit}\n          className=\"searchForm\"\n          >\n          <span id=\"magnifyingGlass\">\n            <svg viewBox=\"0 0 512 512\" width=\"15\" height=\"15\">\n              <path d=\"M349.714 347.937l93.714 109.969-16.254 13.969-93.969-109.969q-48.508 36.825-109.207 36.825-36.826 0-70.476-14.349t-57.905-38.603-38.603-57.905-14.349-70.476 14.349-70.476 38.603-57.905 57.905-38.603 70.476-14.349 70.476 14.349 57.905 38.603 38.603 57.905 14.349 70.476q0 37.841-14.73 71.619t-40.889 58.921zM224 377.397q43.428 0 80.254-21.461t58.286-58.286 21.461-80.254-21.461-80.254-58.286-58.285-80.254-21.46-80.254 21.46-58.285 58.285-21.46 80.254 21.46 80.254 58.285 58.286 80.254 21.461z\" fill=\"currentColor\" ></path>\n            </svg>\n          </span>\n          <input\n            id=\"search\"\n            type=\"search\"\n            value={this.props.search}\n            onChange={this.props.handleChange}\n            placeholder=\"Search\"\n          />\n        </form>\n      </div>\n\n\n        <Route\n          path=\"/\"\n          exact\n          render={(routeProps) => (\n            <Search\n            {...routeProps}\n            baseURL={this.props.baseURL}\n            updateShowInfo={this.props.updateShowInfo}\n            searchResults={this.props.searchResults}\n\n              />\n            )}\n          />\n        <Route\n          path=\"/showalbum\"\n          exact\n          render={(routeProps) => (\n            <ShowAlbum\n              {...routeProps}\n              showInfo={this.props.showInfo}\n              baseURL={this.props.baseURL}\n              playlists={this.props.playlists}\n              updatePlaylists={this.props.updatePlaylists}\n              redirect={this.props.redirect}\n             />\n           )}\n          />\n        <Route\n          exact path=\"/showartist\"\n          render={(routeProps) => (\n            <ShowAlbum\n              {...routeProps}\n              showInfo={this.props.showInfo}\n             />\n           )}\n          />\n\n          <Route\n            strict path=\"/playlist/\"\n            render={(routeProps) => (\n              <ShowPlaylist\n                {...routeProps}\n                currentPlaylist={this.props.currentPlaylist}\n                baseURL={this.props.baseURL}\n                renamePlaylist={this.props.renamePlaylist}\n                deleteOnePlaylist={this.props.deleteOnePlaylist}\n              />\n            )}\n            />\n\n\n\n      </>\n    )\n  }\n}\n\nexport default Body\n","import React, { Component } from 'react';\nimport Sidebar from './Sidebar'\nimport Body from './Body'\n\nimport { HashRouter } from 'react-router-dom'\n\nclass Main extends Component {\n  state = {\n    playlists: '',\n    search: '',\n    searchResults: '',\n    showInfo: '',\n    redirect: false,\n    currentPlaylist: '',\n  }\n\n  componentDidMount = () => {\n    fetch(`${this.props.baseURL}/playlists`)\n    .then(res => res.json())\n    .then(playlists => this.setState({\n      playlists: playlists\n    }))\n    .catch(err => console.log(err))\n  }\n\n  updatePlaylists = (newPlaylist) => {\n    this.setState({\n      playlists: newPlaylist\n    })\n  }\n\n  clearSearchBar = () => {\n    this.setState({\n      search: '',\n      redirect: true,\n      searchResults: '',\n    })\n  }\n\n\n  handleChange = (event) => {\n    event.target.value\n    ?\n    this.setState({\n      [event.target.id]: event.target.value,\n    })\n    :\n    this.setState({\n      [event.target.id]: event.target.value,\n      searchResults: '',\n      redirect: true\n    })\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault()\n    console.log(this.state.search)\n\n    fetch(this.props.baseURL + '/search/' + this.state.search)\n    .then(res => res.json())\n    .then(json => this.setState({\n      searchResults: json\n    }))\n    .catch(err=> console.log(err))\n  }\n\n  updateShowInfo = (info, type) => {\n    fetch(`${this.props.baseURL}/${type}s/${info}`)\n      .then(res => res.json())\n      .then(json => this.setState({\n        showInfo: json,\n        redirect: false,\n      }))\n      .catch(err=>console.log(err))\n  }\n\n  viewPlaylist = (playlist) => {\n    this.setState({\n      searchResults: '',\n      showInfo: '',\n      redirect: false,\n      currentPlaylist: playlist,\n    })\n  }\n\n  renamePlaylist = (updatedPlaylists, renamedPlaylist) => {\n    this.setState({\n      playlists: updatedPlaylists,\n      currentPlaylist: renamedPlaylist\n    })\n  }\n\n  deleteOnePlaylist = (updatedPlaylists) => {\n    this.setState({\n      playlists: updatedPlaylists,\n      currentPlaylist: '',\n      search: '',\n      searchResults: '',\n      showInfo: '',\n      redirect: false,\n    })\n  }\n\n\n\n  render(){\n    return(\n      <>\n      <HashRouter>\n      <div className=\"sidebar\">\n        <Sidebar\n          playlists={this.state.playlists}\n          clearSearchBar={this.clearSearchBar}\n          viewPlaylist={this.viewPlaylist}\n         />\n      </div>\n      <div className=\"body\">\n        <Body\n          baseURL = {this.props.baseURL}\n          playlists={this.state.playlists}\n          updatePlaylists={this.updatePlaylists}\n          updateShowInfo={this.updateShowInfo}\n          handleChange={this.handleChange}\n          handleSubmit={this.handleSubmit}\n          search={this.state.search}\n          searchResults={this.state.searchResults}\n          showInfo={this.state.showInfo}\n          redirect={this.state.redirect}\n          currentPlaylist={this.state.currentPlaylist}\n          renamePlaylist={this.renamePlaylist}\n          deleteOnePlaylist={this.deleteOnePlaylist}\n         />\n      </div>\n      </HashRouter>\n      </>\n    )\n  }\n\n}\n\nexport default Main\n","import React, { Component } from 'react';\n\nclass Console extends Component {\n  render() {\n    return(\n      <h4>\n        Console component!\n      </h4>\n    )\n  }\n}\n\nexport default Console\n","// const baseURL = 'http://localhost:3000'\n\nconst baseURL = 'https://react-rails-spotify.herokuapp.com'\n\nexport {\n  baseURL\n}\n","import React, { Component } from 'react';\nimport './App.css';\nimport Main from './components/Main'\nimport Console from './components/Console'\n\nimport { baseURL } from './constants'\n\n\n\nclass App extends Component {\n\n\n  render(){\n    console.log(baseURL);\n    return (\n      <>\n      <div className=\"maincontainer\">\n        <div className=\"main\">\n          <Main\n            baseURL={baseURL}\n            className=\"main\"\n           />\n        </div>\n\n        <div className=\"console\">\n          <Console />\n        </div>\n      </div>\n\n\n      </>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}