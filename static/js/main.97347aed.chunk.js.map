{"version":3,"sources":["components/SidebarHeader.js","components/UserLibraries.js","components/Sidebar.js","components/TopResult.js","components/AlbumResults.js","components/ArtistResults.js","components/TrackResults.js","components/SearchResults.js","components/SearchNoResults.js","components/Search.js","components/OptionsCard.js","components/Table.js","components/ShowAlbumHeader.js","components/ShowAlbum.js","components/Body.js","components/Main.js","components/Console.js","App.js","constants.js","serviceWorker.js","index.js"],"names":["SidebarHeader","react_default","a","createElement","Fragment","className","react_router_dom","to","onClick","this","props","clearSearchBar","Component","UserLibraries","playlists","length","map","playlist","playlist_name","Sidebar","components_SidebarHeader","components_UserLibraries","TopResult","state","iconStyle","zIndex","imageStyle","filter","hovering","setState","style","_this2","centerAlign","textAlign","topResult","type","onMouseEnter","hoverPlay","onMouseLeave","updateShowInfo","artist_id","src","img","url","alt","name","width","height","viewBox","fill","d","album_id","artist","toUpperCase","AlbumResults","_this","albums","splice","album","i","key","concat","id","ArtistResults","artists","TrackResults","tracks","track","track_id","SearchResults","_this$props$searchRes","searchResults","components_TopResult","baseURL","components_AlbumResults","components_ArtistResults","components_TrackResults","SearchNoResults","Search","components_SearchResults","components_SearchNoResults","OptionsCard","addingToPlaylist","creatingPlaylist","playlistInput","handleChange","event","Object","defineProperty","target","value","handleSubmit","preventDefault","fetch","method","body","JSON","stringify","seed_track","selected","seed_album","showInfo","headers","Accept","Content-Type","then","createdPlaylist","json","newPlayList","playlistCopy","toConsumableArray","updatePlaylists","catch","err","console","log","handleHover","bool","newPlaylist","addToExistingPlaylist","playlistId","playlist_id","images","createdTrack","autoComplete","onSubmit","autoFocus","onChange","placeholder","Table","displayOptionsCard","scope","colSpan","spotify_id","components_OptionsCard","duration","ShowAlbumHeader","_this$props$showInfo","release","total_tracks","ShowAlbum","components_ShowAlbumHeader","components_Table","Body","redirect","react_router","push","search","path","exact","render","routeProps","components_Search","assign","components_ShowAlbum","Main","componentDidMount","res","_this$setState2","info","components_Sidebar","components_Body","Console","App","components_Main","components_Console","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"2RA4BeA,mLAvBX,OACAC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAAA,OACEE,UAAU,kBADZ,QAGAJ,EAAAC,EAAAC,cAAA,OACEE,UAAU,kBAEVJ,EAAAC,EAAAC,cAACG,EAAA,EAAD,CACEC,GAAG,KACHN,EAAAC,EAAAC,cAAA,OACEK,QAASC,KAAKC,MAAMC,gBADtB,aAKJV,EAAAC,EAAAC,cAAA,OACEE,UAAU,kBADZ,iBAjBsBO,aCyCbC,mLAtCX,OACEZ,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACAH,EAAAC,EAAAC,cAAA,KAAGE,UAAU,gCAAb,gBACAJ,EAAAC,EAAAC,cAAA,KAAGE,UAAU,gBAAb,gBAGAJ,EAAAC,EAAAC,cAAA,KAAGE,UAAU,gBAAb,mBAGAJ,EAAAC,EAAAC,cAAA,KAAGE,UAAU,gBAAb,eAGAJ,EAAAC,EAAAC,cAAA,KAAGE,UAAU,gBAAb,UAGAJ,EAAAC,EAAAC,cAAA,KAAGE,UAAU,gBAAb,WAGAJ,EAAAC,EAAAC,cAAA,KAAGE,UAAU,gBAAb,YAIAJ,EAAAC,EAAAC,cAAA,KAAGE,UAAU,gDAAb,aAIEI,KAAKC,MAAMI,UAAUC,OAErBN,KAAKC,MAAMI,UAAUE,IAAI,SAAAC,GAAQ,OAC/BhB,EAAAC,EAAAC,cAAA,KAAGE,UAAU,eAAeY,EAASC,iBAErC,aAjCkBN,aC2BbO,mLAxBX,OACAlB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACAH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,iBACfJ,EAAAC,EAAAC,cAACiB,EAAD,CACET,eAAgBF,KAAKC,MAAMC,kBAG5BV,EAAAC,EAAAC,cAAA,OAAKE,UAAU,iBAChBJ,EAAAC,EAAAC,cAACkB,EAAD,CACEP,UAAWL,KAAKC,MAAMI,aAGvBb,EAAAC,EAAAC,cAAA,OAAKE,UAAU,iBAAf,kBAdiBO,qBC4JPU,6MA5JbC,MAAQ,CACNC,UAAW,CAACC,OAAQ,OACpBC,WAAY,CAACC,OAAQ,8FAGbC,GACRA,EAEAnB,KAAKoB,SAAS,CACZC,MAAO,CAACL,OAAQ,KAChBC,WAAY,CAACC,OAAQ,qBAGvBlB,KAAKoB,SAAS,CACZC,MAAO,CAACL,OAAQ,OAChBC,WAAY,CAACC,OAAQ,uDAIhB,IAAAI,EAAAtB,KACDuB,EAAc,CAACC,UAAW,UAChC,OACAhC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,wBAE8B,WAA5BM,KAAKC,MAAMwB,UAAUC,KAErBlC,EAAAC,EAAAC,cAACG,EAAA,EAAD,CACEC,GAAG,cACHF,UAAU,sBACV+B,aAAc,WACZL,EAAKM,WAAU,IAEjBC,aAAc,WACZP,EAAKM,WAAU,IAEjB7B,QAAS,WACPuB,EAAKrB,MAAM6B,eAAeR,EAAKrB,MAAMwB,UAAUM,UAAW,YAG5DvC,EAAAC,EAAAC,cAAA,OACEsC,IAAKhC,KAAKC,MAAMwB,UAAUQ,IAAI,GAC7BjC,KAAKC,MAAMwB,UAAUQ,IAAI,GAAGC,IAC5B,kCACDC,IAAKnC,KAAKC,MAAMwB,UAAUW,KAC1BxC,UAAU,gCACVyB,MAAOrB,KAAKc,MAAMG,aAEpBzB,EAAAC,EAAAC,cAAA,OACEE,UAAU,YACVyB,MAAOrB,KAAKc,MAAMO,MAClBgB,MAAM,OACNC,OAAO,OACPC,QAAQ,mBACV/C,EAAAC,EAAAC,cAAA,QAAM8C,KAAK,eAAeC,EAAE,gFAG9BjD,EAAAC,EAAAC,cAACG,EAAA,EAAD,CACEC,GAAG,aACHF,UAAU,sBACV+B,aAAc,WACZL,EAAKM,WAAU,IAEjBC,aAAc,WACZP,EAAKM,WAAU,IAEjB7B,QAAS,WACPuB,EAAKrB,MAAM6B,eAAeR,EAAKrB,MAAMwB,UAAUiB,SAAU,WAG3DlD,EAAAC,EAAAC,cAAA,OACEsC,IAAKhC,KAAKC,MAAMwB,UAAUQ,IAAI,GAAGC,IACjCC,IAAKnC,KAAKC,MAAMwB,UAAUW,KAC1BxC,UAAU,oBACVyB,MAAOrB,KAAKc,MAAMG,aAEpBzB,EAAAC,EAAAC,cAAA,OACEE,UAAU,YACVyB,MAAOrB,KAAKc,MAAMO,MAClBgB,MAAM,OACNC,OAAO,OACPC,QAAQ,mBACV/C,EAAAC,EAAAC,cAAA,QAAM8C,KAAK,eAAeC,EAAE,gFAKF,WAA5BzC,KAAKC,MAAMwB,UAAUC,KAErBlC,EAAAC,EAAAC,cAACG,EAAA,EAAD,CACEC,GAAG,eAELN,EAAAC,EAAAC,cAAA,MACE2B,MAAOE,EACP3B,UAAU,mBACVG,QAAS,WACPuB,EAAKrB,MAAM6B,eAAeR,EAAKrB,MAAMwB,UAAUM,UAAW,YAG3D/B,KAAKC,MAAMwB,UAAUW,OAIxB5C,EAAAC,EAAAC,cAACG,EAAA,EAAD,CACEC,GAAG,cAELN,EAAAC,EAAAC,cAAA,MACEE,UAAU,mBACVG,QAAS,WACPuB,EAAKrB,MAAM6B,eAAeR,EAAKrB,MAAMwB,UAAUiB,SAAU,WAG1D1C,KAAKC,MAAMwB,UAAUW,OAKI,WAA5BpC,KAAKC,MAAMwB,UAAUC,KAErBlC,EAAAC,EAAAC,cAACG,EAAA,EAAD,CACEC,GAAG,cAELN,EAAAC,EAAAC,cAAA,MACEE,UAAU,qBACVG,QAAS,WACPuB,EAAKrB,MAAM6B,eAAeR,EAAKrB,MAAMwB,UAAUM,aAGhD/B,KAAKC,MAAMwB,UAAUkB,SAGtB,KAI0B,WAA5B3C,KAAKC,MAAMwB,UAAUC,KAErBlC,EAAAC,EAAAC,cAAA,MACEE,UAAU,aACVyB,MAAOE,GAENvB,KAAKC,MAAMwB,UAAUC,KAAKkB,eAG7BpD,EAAAC,EAAAC,cAAA,MAAIE,UAAU,cACXI,KAAKC,MAAMwB,UAAUC,KAAKkB,wBApJbzC,aCgDT0C,mLA/CJ,IAAAC,EAAA9C,KACA+C,EAAU/C,KAAKC,MAAf8C,OACP,OACEvD,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACAH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,yBACbJ,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,QAAME,UAAU,UAAhB,YAEAJ,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,uBAEbmD,EAAOC,OAAO,EAAE,GAAGzC,IAAI,SAAC0C,EAAOC,GAAR,OAIrB1D,EAAAC,EAAAC,cAACG,EAAA,EAAD,CACEC,GAAG,aACHqD,IAAG,GAAAC,OAAKF,EAAL,UACHG,GAAIJ,EAAMP,SACV9C,UAAU,0BACVG,QAAS,WACP+C,EAAK7C,MAAM6B,eAAemB,EAAMP,SAAU,WAG5ClD,EAAAC,EAAAC,cAAA,OACEsC,IAAKiB,EAAMhB,IAAI,GAAGC,IAClBC,IAAKc,EAAMb,KACXxC,UAAU,kBAEZJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,sBACbJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,eACXqD,EAAMb,MAET5C,EAAAC,EAAAC,cAAA,MAAIE,UAAU,iBACXqD,EAAMN,qBAnCExC,aC0CZmD,mLAzCJ,IACAC,EAAWvD,KAAKC,MAAhBsD,QACP,OACE/D,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACAH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,yBACbJ,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,QAAME,UAAU,UAAhB,YAEAJ,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,uBAEb2D,EAAQP,OAAO,EAAE,GAAGzC,IAAI,SAACoC,EAAQO,GAAT,OACtB1D,EAAAC,EAAAC,cAAA,OACEyD,IAAG,GAAAC,OAAKF,EAAL,WACHG,GAAIV,EAAOZ,UACXnC,UAAU,2BAEVJ,EAAAC,EAAAC,cAAA,OACEsC,IAAKW,EAAOV,IAAI,GACdU,EAAOV,IAAI,GAAGC,IACd,kCACFC,IAAKQ,EAAOP,KACZxC,UAAU,8BAGZJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,sBACbJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,gBACX+C,EAAOP,mBA5BEjC,aC2CbqD,mLA1CJ,IACAC,EAAUzD,KAAKC,MAAfwD,OACP,OACEjE,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACAH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,yBACbJ,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,QAAME,UAAU,UAAhB,YAEAJ,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,uBAEb6D,EAAOT,OAAO,EAAE,GAAGzC,IAAI,SAACmD,EAAOR,GAAR,OACrB1D,EAAAC,EAAAC,cAAA,OACEyD,IAAG,GAAAC,OAAKF,EAAL,UACHG,GAAIK,EAAMC,SACV/D,UAAU,2BAEVJ,EAAAC,EAAAC,cAAA,OACEsC,IAAK0B,EAAMzB,IAAI,GAAGC,IAClBC,IAAKuB,EAAMtB,KACXxC,UAAU,kBAGZJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,sBACbJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,eACX8D,EAAMtB,MAET5C,EAAAC,EAAAC,cAAA,MAAIE,UAAU,iBACX8D,EAAMf,qBA7BExC,aCsDZyD,mLAlDJ,IAAAC,EACwC7D,KAAKC,MAAM6D,cAAlDrC,EADDoC,EACCpC,UAAWsB,EADZc,EACYd,OAAQQ,EADpBM,EACoBN,QAASE,EAD7BI,EAC6BJ,OACpC,OACEjE,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACAH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aACbJ,EAAAC,EAAAC,cAACqE,EAAD,CACEtC,UAAWA,EAAU,GACrBK,eAAgB9B,KAAKC,MAAM6B,eAC3BkC,QAAShE,KAAKC,MAAM+D,WAItBjB,EACEvD,EAAAC,EAAAC,cAAA,OAAKE,UAAU,mBACfJ,EAAAC,EAAAC,cAACuE,EAAD,CACElB,OAAQA,EACRjB,eAAgB9B,KAAKC,MAAM6B,eAC3BkC,QAAShE,KAAKC,MAAM+D,WAGtB,KAGFT,EAAQjD,OACRd,EAAAC,EAAAC,cAAA,OAAKE,UAAU,mBACfJ,EAAAC,EAAAC,cAACwE,EAAD,CACEX,QAASA,EACTzB,eAAgB9B,KAAKC,MAAM6B,eAC3BkC,QAAShE,KAAKC,MAAM+D,WAGtB,KAGAP,EACAjE,EAAAC,EAAAC,cAAA,OAAKE,UAAU,mBACbJ,EAAAC,EAAAC,cAACyE,EAAD,CACEV,OAAQA,EACR3B,eAAgB9B,KAAKC,MAAM6B,eAC3BkC,QAAShE,KAAKC,MAAM+D,WAGxB,aA3CoB7D,aCiBbiE,mLAnBX,OACE5E,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACAH,EAAAC,EAAAC,cAAA,OACAE,UAAU,iBACV2C,QAAQ,cAAcF,MAAM,KAC5BC,OAAO,MACL9C,EAAAC,EAAAC,cAAA,QAAME,UAAU,cAAc6C,EAAE,+eAA+eD,KAAK,kBAEthBhD,EAAAC,EAAAC,cAAA,OAAKE,UAAU,wBACfJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,iBAAd,kBACAJ,EAAAC,EAAAC,cAAA,yGAZwBS,aCoCfkE,mLA9BX,OAEA7E,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACAH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cAIbI,KAAKC,MAAM6D,cAEXtE,EAAAC,EAAAC,cAAA,OAAKE,UAAU,0BACbJ,EAAAC,EAAAC,cAAC4E,EAAD,CACER,cAAe9D,KAAKC,MAAM6D,cAC1BhC,eAAgB9B,KAAKC,MAAM6B,eAC3BkC,QAAWhE,KAAKC,MAAM+D,WAI1BxE,EAAAC,EAAAC,cAAA,OAAKE,UAAU,4BACbJ,EAAAC,EAAAC,cAAC6E,EAAD,gBAtBapE,qBCkMNqE,6MAnMb1D,MAAQ,CACN2D,iBAAkB,GAElBC,kBAAkB,EAClBC,cAAe,MAYjBC,aAAe,SAACC,GACd/B,EAAK1B,SAAL0D,OAAAC,EAAA,EAAAD,CAAA,GACGD,EAAMG,OAAO3B,GAAKwB,EAAMG,OAAOC,WAIpCC,aAAe,SAACL,GACdA,EAAMM,iBAIFrC,EAAKhC,MAAM6D,eACfS,MAAMtC,EAAK7C,MAAM+D,QAAU,aAAc,CACvCqB,OAAQ,OACRC,KAAMC,KAAKC,UACT,CAAChF,SACC,CACEC,cAAeqC,EAAKhC,MAAM6D,cAC1Bc,WAAY3C,EAAK7C,MAAMyF,SACvBC,WAAY7C,EAAK7C,MAAM2F,YAG7BC,QAAS,CACPC,OAAU,oCACVC,eAAgB,sBAGnBC,KAAK,SAAAC,GAAe,OAAIA,EAAgBC,SACxCF,KAAK,SAAAG,GACJ,IAAIC,EAAY,GAAAhD,OAAA0B,OAAAuB,EAAA,EAAAvB,CAAOhC,EAAK7C,MAAMI,WAAlB,CAA6B8F,IAC7CrD,EAAK1B,SAAS,CACZuD,cAAe,GAEfD,kBAAkB,IAEpB5B,EAAK7C,MAAMqG,gBAAgBF,KAE5BG,MAAM,SAAAC,GAAG,OAAEC,QAAQC,IAAIF,QAK1BG,YAAc,SAACC,GACb9D,EAAK1B,SAAS,CACZqD,iBAAkBmC,OAItBC,YAAc,WAEZ/D,EAAK1B,SAAS,CACZsD,kBAAmB5B,EAAKhC,MAAM4D,sBAIlCoC,sBAAwB,SAACC,GACvBjE,EAAK7C,MAAMyF,SAASsB,YAAcD,EAElCjE,EAAK7C,MAAMyF,SAASuB,OAAS,OAE7B7B,MAAMtC,EAAK7C,MAAM+D,QAAU,cAAgB+C,EAAa,UAAW,CACjE1B,OAAQ,OACRC,KAAMC,KAAKC,UACT,CAAC9B,MAAOZ,EAAK7C,MAAMyF,WAErBG,QAAS,CACPC,OAAU,oCACVC,eAAgB,sBAGnBC,KAAK,SAAAkB,GAAY,OAAIT,QAAQC,IAAIQ,KACjCX,MAAM,SAAAC,GAAG,OAAEC,QAAQC,IAAIF,8EAIlB,IAAAlF,EAAAtB,KACN,OACIR,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eACfJ,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,0BAIFF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,8BAIFF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,0BAIFF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,0BAIFF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,sCAIFF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,KACEiC,aAAc,WACZL,EAAKqF,aAAY,IAEnB9E,aAAc,WACZP,EAAKqF,aAAY,KAGnBnH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,UAAf,KARF,kBAUII,KAAKc,MAAM2D,iBACTjF,EAAAC,EAAAC,cAAA,OACEE,UAAU,sBAEPI,KAAKc,MAAM4D,iBACVlF,EAAAC,EAAAC,cAAA,OACEK,QAAS,WACPuB,EAAKuF,gBAGPrH,EAAAC,EAAAC,cAAA,QACEyH,aAAa,MACbC,SAAUpH,KAAKkF,aACftF,UAAU,cAEVJ,EAAAC,EAAAC,cAAA,SACE2H,WAAS,EACThE,GAAG,gBACH3B,KAAK,OACLuD,MAAOjF,KAAKc,MAAM6D,cAClB2C,SAAUtH,KAAK4E,aACf2C,YAAY,qBAMlB/H,EAAAC,EAAAC,cAAA,OACAK,QAAS,WACPuB,EAAKuF,gBAFP,gBAOA7G,KAAKC,MAAMI,UAAUC,OAErBd,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACCK,KAAKC,MAAMI,UAAUE,IAAI,SAAAC,GAAQ,OAChChB,EAAAC,EAAAC,cAAA,OACEK,QAAS,WACPuB,EAAKwF,sBAAsBtG,EAAS6C,MAEpC7C,EAASC,kBAGf,MAIN,OAKRjB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,2BA1LgBS,aC8GXqH,6MA3Gb1G,MAAQ,KAIR6F,YAAc,SAACtD,EAAIuD,GACjB9D,EAAK1B,SAAL0D,OAAAC,EAAA,EAAAD,CAAA,GACGzB,EAAKuD,OAIVa,mBAAqB,SAACpE,GACpBP,EAAKhC,MAAMuC,GAEXP,EAAK1B,SAAL0D,OAAAC,EAAA,EAAAD,CAAA,GACGzB,EAAK,KAGRP,EAAK1B,SAAL0D,OAAAC,EAAA,EAAAD,CAAA,GACGzB,EAAK,qFAMD,IAAA/B,EAAAtB,KACP,OACER,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACAH,EAAAC,EAAAC,cAAA,SAAOE,UAAU,gCACfJ,EAAAC,EAAAC,cAAA,SAAOE,UAAU,cACfJ,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,MACA2B,MAAO,CAACgB,MAAO,QACfqF,MAAM,OAFN,KAGAlI,EAAAC,EAAAC,cAAA,MACA2B,MAAO,CAACgB,MAAO,QACfqF,MAAM,OAFN,KAGAlI,EAAAC,EAAAC,cAAA,MAAIgI,MAAM,MAAMC,QAAQ,KACxB/H,UAAU,gBACVyB,MAAO,CAACG,UAAW,SAFnB,SAGAhC,EAAAC,EAAAC,cAAA,MACEE,UAAU,iBACV8H,MAAM,OAFR,UAOJlI,EAAAC,EAAAC,cAAA,aAGIM,KAAKC,MAAM2F,SACX5F,KAAKC,MAAM2F,SAASnC,OAAOlD,IAAI,SAACmD,EAAOR,GAAR,OAC7B1D,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACAH,EAAAC,EAAAC,cAAA,MACEiC,aAAc,WACZL,EAAKqF,YAAYjD,EAAMkE,YAAY,IAErC/F,aAAc,WACZP,EAAKqF,YAAYjD,EAAMkE,YAAY,KAGrCpI,EAAAC,EAAAC,cAAA,MACCgI,MAAM,OAAOxE,EAAE,GAChB1D,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,MAAIiI,QAAQ,MAAMjE,EAAMtB,MACxB5C,EAAAC,EAAAC,cAAA,MACA2B,MAAO,CAACG,UAAU,UAEhBF,EAAKR,MAAM4C,EAAMkE,YAAcpI,EAAAC,EAAAC,cAAA,OAC7BE,UAAU,mBACVG,QAAS,WACPuB,EAAKmG,mBAAmB/D,EAAMtB,QAHH,gBAM/B,KAIwB,WAAxBd,EAAKR,MAAM4C,EAAMtB,MAGjB5C,EAAAC,EAAAC,cAACmI,EAAD,CACEjC,SAAUtE,EAAKrB,MAAM2F,SACrBF,SAAUhC,EACVM,QAAS1C,EAAKrB,MAAM+D,QACpB3D,UAAWiB,EAAKrB,MAAMI,UACtBiG,gBAAiBhF,EAAKrB,MAAMqG,kBAG5B,KAGH5C,EAAMoE,cAKT,eAlGM3H,aCkCL4H,mLAjCJ,IAAAC,EACkEhI,KAAKC,MAAM2F,SAAxExD,GADL4F,EACC3E,GADD2E,EACK5F,MAAMO,EADXqF,EACWrF,OAAQsE,EADnBe,EACmBf,OAAQgB,EAD3BD,EAC2BC,QAASC,EADpCF,EACoCE,aAAsBxG,GAD1DsG,EACkDvE,OADlDuE,EAC0DtG,MACjE,OACElC,EAAAC,EAAAC,cAAA,OAAKE,UAAU,wBACfJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,kBACfJ,EAAAC,EAAAC,cAAA,OACEE,UAAU,eACVoC,IAAKiF,EAAO,GAAG/E,IACfC,IAAKC,IAEN5C,EAAAC,EAAAC,cAAA,OAAKE,UAAU,mBACbJ,EAAAC,EAAAC,cAAA,SAAIgC,EAAKkB,eACTpD,EAAAC,EAAAC,cAAA,UACG0C,GAEH5C,EAAAC,EAAAC,cAAA,gBACKF,EAAAC,EAAAC,cAAA,YAAOiD,IAEZnD,EAAAC,EAAAC,cAAA,UACGuI,EADH,SACoBC,EADpB,YAKJ1I,EAAAC,EAAAC,cAAA,OAAKE,UAAU,iBACdJ,EAAAC,EAAAC,cAAA,UAAQE,UAAU,mBAAkBJ,EAAAC,EAAAC,cAAA,6BAzBZS,aCsCfgI,mLAlCX,OACE3I,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KAEAH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YAEbI,KAAKC,MAAM2F,SAEXpG,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACAH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,mBACbJ,EAAAC,EAAAC,cAAC0I,EAAD,CACExC,SAAU5F,KAAKC,MAAM2F,YAGzBpG,EAAAC,EAAAC,cAAC2I,EAAD,CACEzC,SAAU5F,KAAKC,MAAM2F,SACrB5B,QAAShE,KAAKC,MAAM+D,QACpB3D,UAAWL,KAAKC,MAAMI,UACtBiG,gBAAiBtG,KAAKC,MAAMqG,mBAS7B,cA5BenG,aCmFTmI,mLA/EJ,IAAAxF,EAAA9C,KACP,OACER,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KAEEK,KAAKC,MAAMsI,SAEX/I,EAAAC,EAAAC,cAAC8I,EAAA,EAAD,CAAUC,MAAI,EAAC3I,GAAG,MAElB,KAGFN,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aAEbJ,EAAAC,EAAAC,cAAA,QACEyH,aAAa,MACbC,SAAUpH,KAAKC,MAAMiF,aACrBtF,UAAU,cAEVJ,EAAAC,EAAAC,cAAA,QAAM2D,GAAG,mBACP7D,EAAAC,EAAAC,cAAA,OAAK6C,QAAQ,cAAcF,MAAM,KAAKC,OAAO,MAC3C9C,EAAAC,EAAAC,cAAA,QAAM+C,EAAE,+eAA+eD,KAAK,mBAGhgBhD,EAAAC,EAAAC,cAAA,SACE2D,GAAG,SACH3B,KAAK,SACLuD,MAAOjF,KAAKC,MAAMyI,OAClBpB,SAAUtH,KAAKC,MAAM2E,aACrB2C,YAAY,aAMd/H,EAAAC,EAAAC,cAAC8I,EAAA,EAAD,CACEG,KAAK,IACLC,OAAK,EACLC,OAAQ,SAACC,GAAD,OACNtJ,EAAAC,EAAAC,cAACqJ,EAADjE,OAAAkE,OAAA,GACIF,EADJ,CAEA9E,QAASlB,EAAK7C,MAAM+D,QACpBlC,eAAgBgB,EAAK7C,MAAM6B,eAC3BgC,cAAehB,EAAK7C,MAAM6D,oBAKhCtE,EAAAC,EAAAC,cAAC8I,EAAA,EAAD,CACEG,KAAK,aACLC,OAAK,EACLC,OAAQ,SAACC,GAAD,OACNtJ,EAAAC,EAAAC,cAACuJ,EAADnE,OAAAkE,OAAA,GACMF,EADN,CAEElD,SAAU9C,EAAK7C,MAAM2F,SACrB5B,QAASlB,EAAK7C,MAAM+D,QACpB3D,UAAWyC,EAAK7C,MAAMI,UACtBiG,gBAAiBxD,EAAK7C,MAAMqG,gBAC5BiC,SAAUzF,EAAK7C,MAAMsI,eAI3B/I,EAAAC,EAAAC,cAAC8I,EAAA,EAAD,CACEG,KAAK,cACLC,OAAK,EACLC,OAAQ,SAACC,GAAD,OACNtJ,EAAAC,EAAAC,cAACuJ,EAADnE,OAAAkE,OAAA,GACMF,EADN,CAEElD,SAAU9C,EAAK7C,MAAM2F,uBApEhBzF,aCoGJ+I,6MArGbpI,MAAQ,CACNT,UAAW,GACXqI,OAAQ,GACR5E,cAAe,GACf8B,SAAU,GACV2C,UAAU,KAGZY,kBAAoB,WAClB/D,MAAK,GAAAhC,OAAIN,EAAK7C,MAAM+D,QAAf,eACJgC,KAAK,SAAAoD,GAAG,OAAIA,EAAIlD,SAChBF,KAAK,SAAA3F,GAAS,OAAIyC,EAAK1B,SAAS,CAC/Bf,UAAWA,MAEZkG,MAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,QAG5BF,gBAAkB,SAACO,GACjB/D,EAAK1B,SAAS,CACZf,UAAWwG,OAIf3G,eAAiB,WACf4C,EAAK1B,SAAS,CACZsH,OAAQ,GACRH,UAAU,EACVzE,cAAe,QAKnBc,aAAe,SAACC,GAAU,IAAAwE,EACxBxE,EAAMG,OAAOC,MAEbnC,EAAK1B,SAAL0D,OAAAC,EAAA,EAAAD,CAAA,GACGD,EAAMG,OAAO3B,GAAKwB,EAAMG,OAAOC,QAGlCnC,EAAK1B,UAALiI,EAAA,GAAAvE,OAAAC,EAAA,EAAAD,CAAAuE,EACGxE,EAAMG,OAAO3B,GAAKwB,EAAMG,OAAOC,OADlCH,OAAAC,EAAA,EAAAD,CAAAuE,EAAA,gBAEiB,IAFjBvE,OAAAC,EAAA,EAAAD,CAAAuE,EAAA,YAGY,GAHZA,OAOFnE,aAAe,SAACL,GACdA,EAAMM,iBACNsB,QAAQC,IAAI5D,EAAKhC,MAAM4H,QAEvBtD,MAAMtC,EAAK7C,MAAM+D,QAAU,WAAalB,EAAKhC,MAAM4H,QAClD1C,KAAK,SAAAoD,GAAG,OAAIA,EAAIlD,SAChBF,KAAK,SAAAE,GAAI,OAAIpD,EAAK1B,SAAS,CAC1B0C,cAAeoC,MAEhBK,MAAM,SAAAC,GAAG,OAAGC,QAAQC,IAAIF,QAG3B1E,eAAiB,SAACwH,EAAM5H,GACtB0D,MAAK,GAAAhC,OAAIN,EAAK7C,MAAM+D,QAAf,KAAAZ,OAA0B1B,EAA1B,MAAA0B,OAAmCkG,IACrCtD,KAAK,SAAAoD,GAAG,OAAIA,EAAIlD,SAChBF,KAAK,SAAAE,GAAI,OAAIpD,EAAK1B,SAAS,CAC1BwE,SAAUM,EACVqC,UAAU,MAEXhC,MAAM,SAAAC,GAAG,OAAEC,QAAQC,IAAIF,8EAM1B,OACEhH,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACAH,EAAAC,EAAAC,cAACG,EAAA,EAAD,KACAL,EAAAC,EAAAC,cAAA,OAAKE,UAAU,WACbJ,EAAAC,EAAAC,cAAC6J,EAAD,CACElJ,UAAWL,KAAKc,MAAMT,UACtBH,eAAgBF,KAAKE,kBAGzBV,EAAAC,EAAAC,cAAA,OAAKE,UAAU,QACbJ,EAAAC,EAAAC,cAAC8J,EAAD,CACExF,QAAWhE,KAAKC,MAAM+D,QACtB3D,UAAWL,KAAKc,MAAMT,UACtBiG,gBAAiBtG,KAAKsG,gBACtBxE,eAAgB9B,KAAK8B,eACrB8C,aAAc5E,KAAK4E,aACnBM,aAAclF,KAAKkF,aACnBwD,OAAQ1I,KAAKc,MAAM4H,OACnB5E,cAAe9D,KAAKc,MAAMgD,cAC1B8B,SAAU5F,KAAKc,MAAM8E,SACrB2C,SAAUvI,KAAKc,MAAMyH,qBA5FZpI,aCMJsJ,mLARX,OACEjK,EAAAC,EAAAC,cAAA,uCAHgBS,aCiCPuJ,mLArBX,OADAjD,QAAQC,ICbI,yBDeVlH,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACAH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,iBACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,QACbJ,EAAAC,EAAAC,cAACiK,EAAD,CACE3F,QCnBI,wBDoBJpE,UAAU,UAIdJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,WACbJ,EAAAC,EAAAC,cAACkK,EAAD,gBAhBQzJ,aEGE0J,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASrB,OAAOrJ,EAAAC,EAAAC,cAACyK,EAAD,MAASC,SAASC,eAAe,SD0H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMxE,KAAK,SAAAyE,GACjCA,EAAaC","file":"static/js/main.97347aed.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport {Link} from 'react-router-dom'\n\nclass SidebarHeader extends Component {\n  render() {\n    return(\n    <>\n      <div\n        className=\"sidebarOptions\"\n        >Home</div>\n      <div\n        className=\"sidebarOptions\"\n        >\n        <Link\n          to=\"/\">\n          <div\n            onClick={this.props.clearSearchBar}\n          > Browse</div>\n        </Link>\n      </div>\n      <div\n        className=\"sidebarOptions\"\n        >Radio</div>\n    </>\n    )\n  }\n}\n\nexport default SidebarHeader\n","import React, { Component } from 'react';\nimport { HashRouter } from 'react-router-dom'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\n\nclass UserLibraries extends Component {\n  render() {\n    return(\n      <>\n      <p className=\"libraryHeaderText resultType\">YOUR LIBRARY</p>\n      <p className=\"libraryLinks\">\n        Made For You\n      </p>\n      <p className=\"libraryLinks\">\n        Recently Played\n      </p>\n      <p className=\"libraryLinks\">\n        Liked Songs\n      </p>\n      <p className=\"libraryLinks\">\n        Albums\n      </p>\n      <p className=\"libraryLinks\">\n        Artists\n      </p>\n      <p className=\"libraryLinks\">\n        Podcasts\n      </p>\n\n      <p className=\"libraryHeaderText resultType playlistsHeader\">\n        PLAYLISTS\n      </p>\n      {\n        this.props.playlists.length\n        ?\n        this.props.playlists.map(playlist => (\n          <p className=\"myPlaylists\">{playlist.playlist_name}</p>\n        ))\n        : null\n      }\n      </>\n    )\n  }\n}\n\nexport default UserLibraries\n","import React, { Component } from 'react';\nimport SidebarHeader from './SidebarHeader'\nimport UserLibraries from './UserLibraries'\n\n\nclass Sidebar extends Component {\n  render() {\n    return(\n    <>\n    <div className=\"sidebarHeader\">\n    <SidebarHeader\n      clearSearchBar={this.props.clearSearchBar}\n     />\n     </div>\n     <div className=\"userLibraries\">\n    <UserLibraries\n      playlists={this.props.playlists}\n     />\n     </div>\n     <div className=\"sidebarFooter\">\n      footer\n     </div>\n\n    </>\n\n\n\n    )\n  }\n}\n\nexport default Sidebar\n","import React, { Component } from 'react'\nimport {Link} from 'react-router-dom'\n\nclass TopResult extends Component {\n\n  state = {\n    iconStyle: {zIndex: \"-10\"},\n    imageStyle: {filter: \"brightness(100%)\"}\n  }\n\n  hoverPlay(hovering) {\n    hovering\n    ?\n    this.setState({\n      style: {zIndex: \"1\"},\n      imageStyle: {filter: \"brightness(50%)\"}\n    })\n    :\n    this.setState({\n      style: {zIndex: \"-10\"},\n      imageStyle: {filter: \"brightness(100%)\"}\n    })\n  }\n\n  render() {\n    const centerAlign = {textAlign: 'center'}\n    return(\n    <>\n      <div>\n      <h3>Top Result</h3>\n      {\n        this.props.topResult.type===\"artist\"\n        ?\n        <Link\n          to='/showartist'\n          className=\"topResultsContainer\"\n          onMouseEnter={() => {\n            this.hoverPlay(true)\n          }}\n          onMouseLeave={() => {\n            this.hoverPlay(false)\n          }}\n          onClick={() => {\n            this.props.updateShowInfo(this.props.topResult.artist_id, \"artist\")\n          }}\n          >\n          <img\n            src={this.props.topResult.img[0]\n            ?this.props.topResult.img[0].url\n            :'https://i.imgur.com/TEfaeVF.png'}\n            alt={this.props.topResult.name}\n            className=\"artistImage topResultImg link\"\n            style={this.state.imageStyle}\n          />\n          <svg\n            className=\"icon-play\"\n            style={this.state.style}\n            width=\"60px\"\n            height=\"60px\"\n            viewBox=\"-65 -50 200 200\">\n          <path fill=\"currentColor\" d=\"M81 44.6c5 3 5 7.8 0 10.8L9 98.7c-5 3-9 .7-9-5V6.3c0-5.7 4-8 9-5l72 43.3z\"></path></svg>\n        </Link>\n        :\n        <Link\n          to='/showalbum'\n          className=\"topResultsContainer\"\n          onMouseEnter={() => {\n            this.hoverPlay(true)\n          }}\n          onMouseLeave={() => {\n            this.hoverPlay(false)\n          }}\n          onClick={() => {\n            this.props.updateShowInfo(this.props.topResult.album_id, \"album\")\n          }}\n          >\n          <img\n            src={this.props.topResult.img[0].url}\n            alt={this.props.topResult.name}\n            className=\"link topResultImg\"\n            style={this.state.imageStyle}\n          />\n          <svg\n            className=\"icon-play\"\n            style={this.state.style}\n            width=\"60px\"\n            height=\"60px\"\n            viewBox=\"-65 -50 200 200\">\n          <path fill=\"currentColor\" d=\"M81 44.6c5 3 5 7.8 0 10.8L9 98.7c-5 3-9 .7-9-5V6.3c0-5.7 4-8 9-5l72 43.3z\"></path></svg>\n        </Link>\n      }\n\n      {\n        this.props.topResult.type===\"artist\"\n        ?\n        <Link\n          to='/showartist'\n          >\n        <h5\n          style={centerAlign}\n          className=\"resultTitle link\"\n          onClick={() => {\n            this.props.updateShowInfo(this.props.topResult.artist_id, \"artist\")\n          }}\n          >\n          {this.props.topResult.name}\n        </h5>\n      </Link>\n        :\n        <Link\n          to='/showalbum'\n          >\n        <h5\n          className=\"resultTitle link\"\n          onClick={() => {\n            this.props.updateShowInfo(this.props.topResult.album_id, \"album\")\n          }}\n          >\n          {this.props.topResult.name}\n        </h5>\n      </Link>\n      }\n      {\n        this.props.topResult.type!==\"artist\"\n        ?\n        <Link\n          to='/showalbum'\n          >\n        <h6\n          className=\"resultSubline link\"\n          onClick={() => {\n            this.props.updateShowInfo(this.props.topResult.artist_id)\n          }}\n          >\n          {this.props.topResult.artist}\n        </h6>\n        </Link>\n        : null\n      }\n\n      {\n        this.props.topResult.type===\"artist\"\n        ?\n        <h6\n          className=\"resultType\"\n          style={centerAlign}\n          >\n          {this.props.topResult.type.toUpperCase()}\n        </h6>\n        :\n        <h6 className=\"resultType\">\n          {this.props.topResult.type.toUpperCase()}\n        </h6>\n      }\n\n      </div>\n    </>\n    )\n  }\n}\n\nexport default TopResult\n","import React, { Component } from 'react'\nimport {Link} from 'react-router-dom'\n\nclass AlbumResults extends Component {\n  render() {\n    const {albums} = this.props\n    return(\n      <>\n      <div className=\"categoryResultsHeader\">\n        <h3>Albums</h3>\n        <span className=\"seeAll\">SEE ALL</span>\n      </div>\n        <hr />\n        <div className=\"categoryResultsBody\">\n        {\n          albums.splice(0,4).map((album, i) => (\n            // <Link\n            //   to='/show'\n            //   >\n            <Link\n              to=\"/showalbum\"\n              key={`${i} album`}\n              id={album.album_id}\n              className=\"categoryResultContainer\"\n              onClick={() => {\n                this.props.updateShowInfo(album.album_id, \"album\")\n              }}\n              >\n              <img\n                src={album.img[0].url}\n                alt={album.name}\n                className=\"categoryImage\"\n              />\n              <div className=\"resultsDescription\">\n                <h5 className=\"resultTitle\">\n                  {album.name}\n                </h5>\n                <h6 className=\"resultSubline\">\n                  {album.artist}\n                </h6>\n              </div>\n\n            </Link>\n          ))\n        }\n      </div>\n      </>\n    )\n  }\n}\n\nexport default AlbumResults\n","import React, { Component } from 'react'\nimport {Link} from 'react-router-dom'\n\nclass ArtistResults extends Component {\n  render() {\n    const {artists} = this.props\n    return(\n      <>\n      <div className=\"categoryResultsHeader\">\n        <h3>Artists</h3>\n        <span className=\"seeAll\">SEE ALL</span>\n      </div>\n        <hr />\n        <div className=\"categoryResultsBody\">\n        {\n          artists.splice(0,4).map((artist, i) => (\n            <div\n              key={`${i} artist`}\n              id={artist.artist_id}\n              className=\"categoryResultContainer\"\n              >\n              <img\n                src={artist.img[0]\n                ? artist.img[0].url\n                : 'https://i.imgur.com/TEfaeVF.png' }\n                alt={artist.name}\n                className=\"categoryImage artistImage\"\n\n              />\n              <div className=\"resultsDescription\">\n                <h5 className=\"resultArtist\">\n                  {artist.name}\n                </h5>\n              </div>\n\n            </div>\n          ))\n\n        }\n      </div>\n      </>\n    )\n  }\n}\n\nexport default ArtistResults\n","import React, { Component } from 'react'\nimport {Link} from 'react-router-dom'\n\nclass TrackResults extends Component {\n  render() {\n    const {tracks} = this.props\n    return(\n      <>\n      <div className=\"categoryResultsHeader\">\n        <h3>Songs</h3>\n        <span className=\"seeAll\">SEE ALL</span>\n      </div>\n        <hr />\n        <div className=\"categoryResultsBody\">\n        {\n          tracks.splice(0,4).map((track, i) => (\n            <div\n              key={`${i} track`}\n              id={track.track_id}\n              className=\"categoryResultContainer\"\n              >\n              <img\n                src={track.img[0].url}\n                alt={track.name}\n                className=\"categoryImage\"\n\n              />\n              <div className=\"resultsDescription\">\n                <h5 className=\"resultTitle\">\n                  {track.name}\n                </h5>\n                <h6 className=\"resultSubline\">\n                  {track.artist}\n                </h6>\n              </div>\n\n            </div>\n          ))\n\n        }\n      </div>\n      </>\n    )\n  }\n}\n\nexport default TrackResults\n","import React, { Component } from 'react'\nimport TopResult from './TopResult'\nimport AlbumResults from './AlbumResults'\nimport ArtistResults from './ArtistResults'\nimport TrackResults from './TrackResults'\n\nclass SearchResults extends Component {\n  render() {\n    const { topResult, albums, artists, tracks } = this.props.searchResults\n    return(\n      <>\n      <div className=\"topResult\">\n        <TopResult\n          topResult={topResult[0]}\n          updateShowInfo={this.props.updateShowInfo}\n          baseURL={this.props.baseURL}\n        />\n      </div>\n      {\n        albums\n        ? <div className=\"categoryResults\">\n          <AlbumResults\n            albums={albums}\n            updateShowInfo={this.props.updateShowInfo}\n            baseURL={this.props.baseURL}\n           />\n         </div>\n        : null\n      }\n      {\n        artists.length\n      ? <div className=\"categoryResults\">\n        <ArtistResults\n          artists={artists}\n          updateShowInfo={this.props.updateShowInfo}\n          baseURL={this.props.baseURL}\n        />\n      </div>\n      : null\n      }\n      {\n        tracks\n      ? <div className=\"categoryResults\">\n          <TrackResults\n            tracks={tracks}\n            updateShowInfo={this.props.updateShowInfo}\n            baseURL={this.props.baseURL}\n           />\n        </div>\n      : null\n      }\n\n    </>\n    )\n  }\n}\n\nexport default SearchResults\n","import React, { Component } from 'react'\n\nclass SearchNoResults extends Component {\n  render() {\n    return(\n      <>\n      <svg\n      className=\"searchGlassSvg\"\n      viewBox=\"0 0 512 512\" width=\"65\"\n      height=\"65\">\n        <path className=\"searchGlass\" d=\"M349.714 347.937l93.714 109.969-16.254 13.969-93.969-109.969q-48.508 36.825-109.207 36.825-36.826 0-70.476-14.349t-57.905-38.603-38.603-57.905-14.349-70.476 14.349-70.476 38.603-57.905 57.905-38.603 70.476-14.349 70.476 14.349 57.905 38.603 38.603 57.905 14.349 70.476q0 37.841-14.73 71.619t-40.889 58.921zM224 377.397q43.428 0 80.254-21.461t58.286-58.286 21.461-80.254-21.461-80.254-58.286-58.285-80.254-21.46-80.254 21.46-58.285 58.285-21.46 80.254 21.46 80.254 58.285 58.286 80.254 21.461z\" fill=\"currentColor\" ></path>\n      </svg>\n      <div className=\"noResultsDescription\">\n      <h1 className=\"searchspotify\">Search Spotify</h1>\n      <p>\n      Find your favorite songs, artists, albums, podcast & videos, playlists and friends.\n      </p>\n      </div>\n      </>\n    )\n  }\n}\n\nexport default SearchNoResults\n","import React, { Component } from 'react'\nimport SearchResults from './SearchResults'\nimport SearchNoResults from './SearchNoResults'\n\nclass Search extends Component {\n\n\n  render() {\n    return(\n\n    <>\n    <div className=\"searchpage\">\n\n\n    {\n      this.props.searchResults\n      ?\n      <div className=\"searchResultsComponent\">\n        <SearchResults\n          searchResults={this.props.searchResults}\n          updateShowInfo={this.props.updateShowInfo}\n          baseURL = {this.props.baseURL}\n        />\n      </div>\n      :\n      <div className=\"searchNoResultsComponent\">\n        <SearchNoResults />\n      </div>\n    }\n\n\n\n  </div>\n  </>\n    )\n  }\n}\n\nexport default Search\n","import React, { Component } from 'react'\n\nclass OptionsCard extends Component {\n  state = {\n    addingToPlaylist: '',\n    // playlists: '',\n    creatingPlaylist: false,\n    playlistInput: ''\n  }\n\n  // componentDidMount = () => {\n  //   fetch(`${this.props.baseURL}/playlists`)\n  //   .then(res => res.json())\n  //   .then(playlists => this.setState({\n  //     playlists: playlists\n  //   }))\n  //   .catch(err => console.log(err))\n  // }\n\n  handleChange = (event) => {\n    this.setState({\n      [event.target.id]: event.target.value\n    })\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault()\n\n\n\n    if (this.state.playlistInput) {\n    fetch(this.props.baseURL + '/playlists', {\n      method: 'POST',\n      body: JSON.stringify(\n        {playlist:\n          {\n            playlist_name: this.state.playlistInput,\n            seed_track: this.props.selected,\n            seed_album: this.props.showInfo\n          }\n      }),\n      headers: {\n        'Accept': 'application/json, text/plain, */*',\n        'Content-Type': 'application/json'\n        }\n      })\n    .then(createdPlaylist => createdPlaylist.json())\n    .then(newPlayList => {\n      let playlistCopy = [...this.props.playlists, newPlayList]\n      this.setState({\n        playlistInput: '',\n        // playlists: playlistCopy,\n        creatingPlaylist: false,\n      })\n      this.props.updatePlaylists(playlistCopy)\n    })\n    .catch(err=>console.log(err))\n    }\n  }\n\n\n  handleHover = (bool) => {\n    this.setState({\n      addingToPlaylist: bool\n    })\n  }\n\n  newPlaylist = () => {\n\n    this.setState({\n      creatingPlaylist: !this.state.creatingPlaylist\n    })\n  }\n\n  addToExistingPlaylist = (playlistId) => {\n    this.props.selected.playlist_id = playlistId\n\n    this.props.selected.images = 'none'\n\n    fetch(this.props.baseURL + '/playlists/' + playlistId + '/tracks', {\n      method: 'POST',\n      body: JSON.stringify(\n        {track: this.props.selected\n      }),\n      headers: {\n        'Accept': 'application/json, text/plain, */*',\n        'Content-Type': 'application/json'\n        }\n      })\n    .then(createdTrack => console.log(createdTrack))\n    .catch(err=>console.log(err))\n\n  }\n\n  render(){\n    return(\n        <div className=\"optionsCard\">\n        <div>\n          <p>\n            Add to Queue\n          </p>\n        </div>\n        <div>\n          <p>\n          Go to Song Radio\n          </p>\n        </div>\n        <div>\n          <p>\n            Go to Artist\n          </p>\n        </div>\n        <div>\n          <p>\n            Show Credits\n          </p>\n        </div>\n        <div>\n          <p>\n          Save to your Liked Songs\n          </p>\n        </div>\n        <div>\n          <p\n            onMouseEnter={() => {\n              this.handleHover(true)\n            }}\n            onMouseLeave={() => {\n              this.handleHover(false)\n            }}\n            >\n            <div className=\"carrot\">&#60;</div>Add to Playlist\n            {\n              this.state.addingToPlaylist\n              ? <div\n                  className=\"createPlaylistCard\"\n                  >\n                    {this.state.creatingPlaylist?\n                      <div\n                        onClick={() => {\n                          this.newPlaylist()\n                        }}\n                        >\n                        <form\n                          autoComplete=\"off\"\n                          onSubmit={this.handleSubmit}\n                          className=\"searchForm\"\n                          >\n                          <input\n                            autoFocus\n                            id=\"playlistInput\"\n                            type=\"text\"\n                            value={this.state.playlistInput}\n                            onChange={this.handleChange}\n                            placeholder=\"My Playlist #5\"\n\n                          />\n                        </form>\n                      </div>\n                      :\n                      <div\n                      onClick={() => {\n                        this.newPlaylist()\n                      }}>\n                      New Playlist\n                    </div>}\n                    {\n                      this.props.playlists.length\n                      ?\n                      <>\n                      {this.props.playlists.map(playlist => (\n                        <div\n                          onClick={() => {\n                            this.addToExistingPlaylist(playlist.id)\n                          }}\n                          >{playlist.playlist_name}</div>\n                      ))}\n                  </>\n                    : null\n                  }\n\n                </div>\n              : null\n            }\n          </p>\n\n        </div>\n        <div>\n          <p>\n            Share\n          </p>\n\n        </div>\n        </div>\n    )\n  }\n}\n\nexport default OptionsCard\n","import React, { Component } from 'react';\nimport OptionsCard from './OptionsCard'\n\nclass Table extends Component {\n\n  state = {\n\n  }\n\n  handleHover = (id, bool) => {\n    this.setState({\n      [id]: bool\n    })\n  }\n\n  displayOptionsCard = (id) => {\n    this.state[id]\n    ?\n    this.setState({\n      [id]: ''\n    })\n    :\n    this.setState({\n      [id]: 'clicked'\n    })\n  }\n\n\n\n  render() {\n    return(\n      <>\n      <table className=\"table table-hover table-dark\">\n        <thead className=\"sticky-top\">\n          <tr>\n            <th\n            style={{width: \"50px\"}}\n            scope=\"col\">#</th>\n            <th\n            style={{width: \"50px\"}}\n            scope=\"col\"> </th>\n            <th scope=\"col\" colSpan=\"10\"\n            className=\"tableTextLeft\"\n            style={{textAlign: \"left\"}}>TITLE</th>\n            <th\n              className=\"tableTextRight\"\n              scope=\"col\">TIME</th>\n\n          </tr>\n        </thead>\n\n        <tbody>\n\n          {\n            this.props.showInfo ?\n            this.props.showInfo.tracks.map((track, i) => (\n              <>\n              <tr\n                onMouseEnter={() => {\n                  this.handleHover(track.spotify_id, true)\n                }}\n                onMouseLeave={() => {\n                  this.handleHover(track.spotify_id, false)\n                }}\n              >\n                <th\n                 scope=\"row\">{i+1}</th>\n                <th>&hearts;</th>\n                <td colSpan=\"10\">{track.name}</td>\n                <td\n                style={{textAlign:\"right\"}}\n                >\n                { this.state[track.spotify_id] ? <div\n                    className=\"trackOptionsIcon\"\n                    onClick={() => {\n                      this.displayOptionsCard(track.name)\n                    }}\n                  >&#183;&#183;&#183;</div>\n                : null\n                }\n\n                {\n                  this.state[track.name]==\"clicked\"\n                  ?\n\n                  <OptionsCard\n                    showInfo={this.props.showInfo}\n                    selected={track}\n                    baseURL={this.props.baseURL}\n                    playlists={this.props.playlists}\n                    updatePlaylists={this.props.updatePlaylists}\n                  />\n\n                  : null\n                }\n\n                {track.duration}\n                </td>\n              </tr>\n            </>\n            ))\n            : null\n          }\n\n\n        </tbody>\n      </table>\n    </>\n    )\n  }\n}\n\nexport default Table\n","import React, { Component } from 'react'\nimport Table from './Table'\n\nclass ShowAlbumHeader extends Component {\n  render() {\n    const { id, name, artist, images, release, total_tracks, tracks, type} = this.props.showInfo\n    return(\n      <div className=\"albumHeaderContainer\">\n      <div className=\"headerMainInfo\">\n      <img\n        className=\"topResultImg\"\n        src={images[0].url}\n        alt={name}\n       />\n       <div className=\"albumHeaderInfo\">\n         <p>{type.toUpperCase()}</p>\n         <h1>\n           {name}\n         </h1>\n         <h4>\n           By <span>{artist}</span>\n         </h4>\n         <h4>\n           {release} &#183; {total_tracks} songs\n         </h4>\n       </div>\n     </div>\n     <div className=\"headerOptions\">\n      <button className=\"btn btn-success\"><div>PLAY</div></button>\n    </div>\n   </div>\n\n\n    )\n  }\n}\n\nexport default ShowAlbumHeader\n","import React, { Component } from 'react'\nimport ShowAlbumHeader from './ShowAlbumHeader'\nimport Table from './Table'\n\n\nclass ShowAlbum extends Component {\n  render() {\n    return(\n      <>\n\n      <div className=\"showpage\">\n      {\n        this.props.showInfo\n        ?\n        <>\n        <div className=\"showTableHeader\">\n          <ShowAlbumHeader\n            showInfo={this.props.showInfo}\n           />\n        </div>\n        <Table\n          showInfo={this.props.showInfo}\n          baseURL={this.props.baseURL}\n          playlists={this.props.playlists}\n          updatePlaylists={this.props.updatePlaylists}\n        />\n      </>\n\n\n\n\n\n         :\n         null\n      }\n      </div>\n      </>\n    )\n  }\n}\n\nexport default ShowAlbum\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport { Redirect } from 'react-router';\n\n\nimport Search from './Search'\nimport ShowAlbum from './ShowAlbum'\n\nclass Body extends Component {\n  render() {\n    return(\n      <>\n      {\n        this.props.redirect\n        ?\n        <Redirect push to=\"/\" />\n        :\n        null\n\n      }\n      <div className=\"searchbar\">\n\n        <form\n          autoComplete=\"off\"\n          onSubmit={this.props.handleSubmit}\n          className=\"searchForm\"\n          >\n          <span id=\"magnifyingGlass\">\n            <svg viewBox=\"0 0 512 512\" width=\"15\" height=\"15\">\n              <path d=\"M349.714 347.937l93.714 109.969-16.254 13.969-93.969-109.969q-48.508 36.825-109.207 36.825-36.826 0-70.476-14.349t-57.905-38.603-38.603-57.905-14.349-70.476 14.349-70.476 38.603-57.905 57.905-38.603 70.476-14.349 70.476 14.349 57.905 38.603 38.603 57.905 14.349 70.476q0 37.841-14.73 71.619t-40.889 58.921zM224 377.397q43.428 0 80.254-21.461t58.286-58.286 21.461-80.254-21.461-80.254-58.286-58.285-80.254-21.46-80.254 21.46-58.285 58.285-21.46 80.254 21.46 80.254 58.285 58.286 80.254 21.461z\" fill=\"currentColor\" ></path>\n            </svg>\n          </span>\n          <input\n            id=\"search\"\n            type=\"search\"\n            value={this.props.search}\n            onChange={this.props.handleChange}\n            placeholder=\"Search\"\n          />\n        </form>\n      </div>\n\n\n          <Route\n            path=\"/\"\n            exact\n            render={(routeProps) => (\n              <Search\n              {...routeProps}\n              baseURL={this.props.baseURL}\n              updateShowInfo={this.props.updateShowInfo}\n              searchResults={this.props.searchResults}\n\n                />\n              )}\n            />\n        <Route\n          path=\"/showalbum\"\n          exact\n          render={(routeProps) => (\n            <ShowAlbum\n              {...routeProps}\n              showInfo={this.props.showInfo}\n              baseURL={this.props.baseURL}\n              playlists={this.props.playlists}\n              updatePlaylists={this.props.updatePlaylists}\n              redirect={this.props.redirect}\n             />\n           )}\n          />\n        <Route\n          path=\"/showartist\"\n          exact\n          render={(routeProps) => (\n            <ShowAlbum\n              {...routeProps}\n              showInfo={this.props.showInfo}\n             />\n           )}\n          />\n\n\n\n      </>\n    )\n  }\n}\n\nexport default Body\n","import React, { Component } from 'react';\nimport Sidebar from './Sidebar'\nimport Body from './Body'\n\nimport { HashRouter } from 'react-router-dom'\n\nclass Main extends Component {\n  state = {\n    playlists: '',\n    search: '',\n    searchResults: '',\n    showInfo: '',\n    redirect: false,\n  }\n\n  componentDidMount = () => {\n    fetch(`${this.props.baseURL}/playlists`)\n    .then(res => res.json())\n    .then(playlists => this.setState({\n      playlists: playlists\n    }))\n    .catch(err => console.log(err))\n  }\n\n  updatePlaylists = (newPlaylist) => {\n    this.setState({\n      playlists: newPlaylist\n    })\n  }\n\n  clearSearchBar = () => {\n    this.setState({\n      search: '',\n      redirect: true,\n      searchResults: '',\n    })\n  }\n\n\n  handleChange = (event) => {\n    event.target.value\n    ?\n    this.setState({\n      [event.target.id]: event.target.value,\n    })\n    :\n    this.setState({\n      [event.target.id]: event.target.value,\n      searchResults: '',\n      redirect: true\n    })\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault()\n    console.log(this.state.search)\n\n    fetch(this.props.baseURL + '/search/' + this.state.search)\n    .then(res => res.json())\n    .then(json => this.setState({\n      searchResults: json\n    }))\n    .catch(err=> console.log(err))\n  }\n\n  updateShowInfo = (info, type) => {\n    fetch(`${this.props.baseURL}/${type}s/${info}`)\n      .then(res => res.json())\n      .then(json => this.setState({\n        showInfo: json,\n        redirect: false,\n      }))\n      .catch(err=>console.log(err))\n  }\n\n\n\n  render(){\n    return(\n      <>\n      <HashRouter>\n      <div className=\"sidebar\">\n        <Sidebar\n          playlists={this.state.playlists}\n          clearSearchBar={this.clearSearchBar}\n         />\n      </div>\n      <div className=\"body\">\n        <Body\n          baseURL = {this.props.baseURL}\n          playlists={this.state.playlists}\n          updatePlaylists={this.updatePlaylists}\n          updateShowInfo={this.updateShowInfo}\n          handleChange={this.handleChange}\n          handleSubmit={this.handleSubmit}\n          search={this.state.search}\n          searchResults={this.state.searchResults}\n          showInfo={this.state.showInfo}\n          redirect={this.state.redirect}\n         />\n      </div>\n      </HashRouter>\n      </>\n    )\n  }\n\n}\n\nexport default Main\n","import React, { Component } from 'react';\n\nclass Console extends Component {\n  render() {\n    return(\n      <h4>\n        Console component!\n      </h4>\n    )\n  }\n}\n\nexport default Console\n","import React, { Component } from 'react';\nimport './App.css';\nimport Main from './components/Main'\nimport Console from './components/Console'\n\nimport { baseURL } from './constants'\n\n\n\nclass App extends Component {\n\n\n  render(){\n    console.log(baseURL);\n    return (\n      <>\n      <div className=\"maincontainer\">\n        <div className=\"main\">\n          <Main\n            baseURL={baseURL}\n            className=\"main\"\n           />\n        </div>\n\n        <div className=\"console\">\n          <Console />\n        </div>\n      </div>\n\n\n      </>\n    )\n  }\n}\n\nexport default App;\n","const baseURL = 'http://localhost:3000'\n\n// const baseURL = 'https://react-rails-spotify.herokuapp.com'\n\nexport {\n  baseURL\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}